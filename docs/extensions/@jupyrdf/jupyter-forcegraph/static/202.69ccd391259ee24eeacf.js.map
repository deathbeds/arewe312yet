{"version":3,"file":"202.69ccd391259ee24eeacf.js?v=69ccd391259ee24eeacf","mappings":"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","sources":["webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/center.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/add.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/half.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/x.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/binarytree.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/add.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/quad.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/x.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/y.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/quadtree.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/cover.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/data.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/extent.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/find.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/remove.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/root.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/size.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/visit.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-binarytree/src/visitAfter.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/add.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/octant.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/x.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/y.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/z.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/octree.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/cover.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/data.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/extent.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/find.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/remove.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/root.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/size.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/visit.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/constant.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/jiggle.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/collide.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/link.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/cover.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/data.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/extent.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/find.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/remove.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/root.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/size.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/visit.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-octree/src/visitAfter.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-dispatch/src/dispatch.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-timer/src/timer.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/lcg.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/simulation.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/manyBody.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/radial.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/x.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/y.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/d3-force-3d/src/z.js"],"sourcesContent":["export default function(x, y, z) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  if (z == null) z = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0,\n        sz = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x || 0, sy += node.y || 0, sz += node.z || 0;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, sz = (sz / n - z) * strength, i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (sx) { node.x -= sx }\n      if (sy) { node.y -= sy; }\n      if (sz) { node.z -= sz; }\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = +_, force) : z;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d);\n  return add(this.cover(x), x, d);\n}\n\nfunction add(tree, x, d) {\n  if (isNaN(x)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      x1 = tree._x1,\n      xm,\n      xp,\n      right,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (parent = node, !(node = node[i = +right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  if (x === xp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(2) : tree._root = new Array(2);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n  } while ((i = +right) === (j = +(xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  if (!Array.isArray(data)) data = Array.from(data);\n  const n = data.length;\n  const xz = new Float64Array(n);\n  let x0 = Infinity,\n      x1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (let i = 0, x; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, data[i]))) continue;\n    xz[i] = x;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0).cover(x1);\n\n  // Add the new points.\n  for (let i = 0; i < n; ++i) {\n    add(this, xz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, x1) {\n  this.node = node;\n  this.x0 = x0;\n  this.x1 = x1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\n\nexport default function binarytree(nodes, x) {\n  var tree = new Binarytree(x == null ? defaultX : x, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Binarytree(x, x0, x1) {\n  this._x = x;\n  this._x0 = x0;\n  this._x1 = x1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = binarytree.prototype = Binarytree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Binarytree(this._x, this._x0, this._x1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(2)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 2; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(2)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  if (isNaN(x = +x)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      x1 = this._x1;\n\n  // If the binarytree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing half boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1) {\n      i = +(x < x0);\n      parent = new Array(2), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z; break;\n        case 1: x0 = x1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._x1 = x1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0]).cover(+_[1][0])\n      : isNaN(this._x0) ? undefined : [[this._x0], [this._x1]];\n}\n","import Half from \"./half.js\";\n\nexport default function(x, radius) {\n  var data,\n      x0 = this._x0,\n      x1,\n      x2,\n      x3 = this._x1,\n      halves = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) halves.push(new Half(node, x0, x3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius;\n    x3 = x + radius;\n  }\n\n  while (q = halves.pop()) {\n\n    // Stop searching if this half can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (x2 = q.x1) < x0) continue;\n\n    // Bisect the current half.\n    if (node.length) {\n      var xm = (x1 + x2) / 2;\n\n      halves.push(\n        new Half(node[1], xm, x2),\n        new Half(node[0], x1, xm)\n      );\n\n      // Visit the closest half first.\n      if (i = +(x >= xm)) {\n        q = halves[halves.length - 1];\n        halves[halves.length - 1] = halves[halves.length - 1 - i];\n        halves[halves.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var d = Math.abs(x - +this._x.call(null, node.data));\n      if (d < radius) {\n        radius = d;\n        x0 = x - d;\n        x3 = x + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      x1 = this._x1,\n      x,\n      xm,\n      right,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (!(parent = node, node = node[i = +right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 1]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1])\n      && node === (parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Half from \"./half.js\";\n\nexport default function(callback) {\n  var halves = [], q, node = this._root, child, x0, x1;\n  if (node) halves.push(new Half(node, this._x0, this._x1));\n  while (q = halves.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, x1 = q.x1) && node.length) {\n      var xm = (x0 + x1) / 2;\n      if (child = node[1]) halves.push(new Half(child, xm, x1));\n      if (child = node[0]) halves.push(new Half(child, x0, xm));\n    }\n  }\n  return this;\n}\n","import Half from \"./half.js\";\n\nexport default function(callback) {\n  var halves = [], next = [], q;\n  if (this._root) halves.push(new Half(this._root, this._x0, this._x1));\n  while (q = halves.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, x1 = q.x1, xm = (x0 + x1) / 2;\n      if (child = node[0]) halves.push(new Half(child, x0, xm));\n      if (child = node[1]) halves.push(new Half(child, xm, x1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.x1);\n  }\n  return this;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d),\n      z = +this._z.call(null, d);\n  return add(this.cover(x, y, z), x, y, z, d);\n}\n\nfunction add(tree, x, y, z, d) {\n  if (isNaN(x) || isNaN(y) || isNaN(z)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      z0 = tree._z0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      z1 = tree._z1,\n      xm,\n      ym,\n      zm,\n      xp,\n      yp,\n      zp,\n      right,\n      bottom,\n      deep,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n    if (parent = node, !(node = node[i = deep << 2 | bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  zp = +tree._z.call(null, node.data);\n  if (x === xp && y === yp && z === zp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(8) : tree._root = new Array(8);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n  } while ((i = deep << 2 | bottom << 1 | right) === (j = (zp >= zm) << 2 | (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  if (!Array.isArray(data)) data = Array.from(data);\n  const n = data.length;\n  const xz = new Float64Array(n);\n  const yz = new Float64Array(n);\n  const zz = new Float64Array(n);\n  let x0 = Infinity,\n      y0 = Infinity,\n      z0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity,\n      z1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (let i = 0, d, x, y, z; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d)) || isNaN(z = +this._z.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    zz[i] = z;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n    if (z < z0) z0 = z;\n    if (z > z1) z1 = z;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1 || z0 > z1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0, z0).cover(x1, y1, z1);\n\n  // Add the new points.\n  for (let i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], zz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, z0, x1, y1, z1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.z0 = z0;\n  this.x1 = x1;\n  this.y1 = y1;\n  this.z1 = z1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","export function defaultZ(d) {\n  return d[2];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._z = _, this) : this._z;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\nimport tree_z, {defaultZ} from \"./z.js\";\n\nexport default function octree(nodes, x, y, z) {\n  var tree = new Octree(x == null ? defaultX : x, y == null ? defaultY : y, z == null ? defaultZ : z, NaN, NaN, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Octree(x, y, z, x0, y0, z0, x1, y1, z1) {\n  this._x = x;\n  this._y = y;\n  this._z = z;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._z0 = z0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._z1 = z1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = octree.prototype = Octree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Octree(this._x, this._y, this._z, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(8)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 8; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(8)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\ntreeProto.z = tree_z;\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {binarytree} from \"d3-binarytree\";\nimport {quadtree} from \"d3-quadtree\";\nimport {octree} from \"d3-octree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction z(d) {\n  return d.z + d.vz;\n}\n\nexport default function(radius) {\n  var nodes,\n      nDim,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        zi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree =\n          (nDim === 1 ? binarytree(nodes, x)\n          :(nDim === 2 ? quadtree(nodes, x, y)\n          :(nDim === 3 ? octree(nodes, x, y, z)\n          :null\n      ))).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        if (nDim > 1) { yi = node.y + node.vy; }\n        if (nDim > 2) { zi = node.z + node.vz; }\n        tree.visit(apply);\n      }\n    }\n\n    function apply(treeNode, arg1, arg2, arg3, arg4, arg5, arg6) {\n      var args = [arg1, arg2, arg3, arg4, arg5, arg6];\n      var x0 = args[0],\n          y0 = args[1],\n          z0 = args[2],\n          x1 = args[nDim],\n          y1 = args[nDim+1],\n          z1 = args[nDim+2];\n\n      var data = treeNode.data, rj = treeNode.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = (nDim > 1 ? yi - data.y - data.vy : 0),\n              z = (nDim > 2 ? zi - data.z - data.vz : 0),\n              l = x * x + y * y + z * z;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n            if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            if (nDim > 1) { node.vy += (y *= l) * r; }\n            if (nDim > 2) { node.vz += (z *= l) * r; }\n\n            data.vx -= x * (r = 1 - r);\n            if (nDim > 1) { data.vy -= y * r; }\n            if (nDim > 2) { data.vz -= z * r; }\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r\n          || (nDim > 1 && (y0 > yi + r || y1 < yi - r))\n          || (nDim > 2 && (z0 > zi + r || z1 < zi - r));\n    }\n  }\n\n  function prepare(treeNode) {\n    if (treeNode.data) return treeNode.r = radii[treeNode.data.index];\n    for (var i = treeNode.r = 0; i < Math.pow(2, nDim); ++i) {\n      if (treeNode[i] && treeNode[i].r > treeNode.r) {\n        treeNode.r = treeNode[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, ...args) {\n    nodes = _nodes;\n    random = args.find(arg => typeof arg === 'function') || Math.random;\n    nDim = args.find(arg => [1, 2, 3].includes(arg)) || 2;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      nDim,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x = 0, y = 0, z = 0, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        if (nDim > 1) { y = target.y + target.vy - source.y - source.vy || jiggle(random); }\n        if (nDim > 2) { z = target.z + target.vz - source.z - source.vz || jiggle(random); }\n        l = Math.sqrt(x * x + y * y + z * z);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l, z *= l;\n\n        target.vx -= x * (b = bias[i]);\n        if (nDim > 1) { target.vy -= y * b; }\n        if (nDim > 2) { target.vz -= z * b; }\n\n        source.vx += x * (b = 1 - b);\n        if (nDim > 1) { source.vy += y * b; }\n        if (nDim > 2) { source.vz += z * b; }\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, ...args) {\n    nodes = _nodes;\n    random = args.find(arg => typeof arg === 'function') || Math.random;\n    nDim = args.find(arg => [1, 2, 3].includes(arg)) || 2;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y, z) {\n  if (isNaN(x = +x) || isNaN(y = +y) || isNaN(z = +z)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1 = this._x1,\n      y1 = this._y1,\n      z1 = this._z1;\n\n  // If the octree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing octant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n    z1 = (z0 = Math.floor(z)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var t = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1 || z0 > z || z >= z1) {\n      i = (z < z0) << 2 | (y < y0) << 1 | (x < x0);\n      parent = new Array(8), parent[i] = node, node = parent, t *= 2;\n      switch (i) {\n        case 0: x1 = x0 + t, y1 = y0 + t, z1 = z0 + t; break;\n        case 1: x0 = x1 - t, y1 = y0 + t, z1 = z0 + t; break;\n        case 2: x1 = x0 + t, y0 = y1 - t, z1 = z0 + t; break;\n        case 3: x0 = x1 - t, y0 = y1 - t, z1 = z0 + t; break;\n        case 4: x1 = x0 + t, y1 = y0 + t, z0 = z1 - t; break;\n        case 5: x0 = x1 - t, y1 = y0 + t, z0 = z1 - t; break;\n        case 6: x1 = x0 + t, y0 = y1 - t, z0 = z1 - t; break;\n        case 7: x0 = x1 - t, y0 = y1 - t, z0 = z1 - t; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._z0 = z0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._z1 = z1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1], +_[0][2]).cover(+_[1][0], +_[1][1], +_[1][2])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0, this._z0], [this._x1, this._y1, this._z1]];\n}\n","import Octant from \"./octant.js\";\n\nexport default function(x, y, z, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1,\n      y1,\n      z1,\n      x2,\n      y2,\n      z2,\n      x3 = this._x1,\n      y3 = this._y1,\n      z3 = this._z1,\n      octs = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) octs.push(new Octant(node, x0, y0, z0, x3, y3, z3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius, z0 = z - radius;\n    x3 = x + radius, y3 = y + radius, z3 = z + radius;\n    radius *= radius;\n  }\n\n  while (q = octs.pop()) {\n\n    // Stop searching if this octant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (z1 = q.z0) > z3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0\n        || (z2 = q.z1) < z0) continue;\n\n    // Bisect the current octant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2,\n          zm = (z1 + z2) / 2;\n\n      octs.push(\n        new Octant(node[7], xm, ym, zm, x2, y2, z2),\n        new Octant(node[6], x1, ym, zm, xm, y2, z2),\n        new Octant(node[5], xm, y1, zm, x2, ym, z2),\n        new Octant(node[4], x1, y1, zm, xm, ym, z2),\n        new Octant(node[3], xm, ym, z1, x2, y2, zm),\n        new Octant(node[2], x1, ym, z1, xm, y2, zm),\n        new Octant(node[1], xm, y1, z1, x2, ym, zm),\n        new Octant(node[0], x1, y1, z1, xm, ym, zm)\n      );\n\n      // Visit the closest octant first.\n      if (i = (z >= zm) << 2 | (y >= ym) << 1 | (x >= xm)) {\n        q = octs[octs.length - 1];\n        octs[octs.length - 1] = octs[octs.length - 1 - i];\n        octs[octs.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          dz = z - +this._z.call(null, node.data),\n          d2 = dx * dx + dy * dy + dz * dz;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d, z0 = z - d;\n        x3 = x + d, y3 = y + d, z3 = z + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d)) || isNaN(z = +this._z.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1 = this._x1,\n      y1 = this._y1,\n      z1 = this._z1,\n      x,\n      y,\n      z,\n      xm,\n      ym,\n      zm,\n      right,\n      bottom,\n      deep,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n    if (!(parent = node, node = node[i = deep << 2 | bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 7] || parent[(i + 2) & 7] || parent[(i + 3) & 7] || parent[(i + 4) & 7] || parent[(i + 5) & 7] || parent[(i + 6) & 7] || parent[(i + 7) & 7]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3] || parent[4] || parent[5] || parent[6] || parent[7])\n      && node === (parent[7] || parent[6] || parent[5] || parent[4] || parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Octant from \"./octant.js\";\n\nexport default function(callback) {\n  var octs = [], q, node = this._root, child, x0, y0, z0, x1, y1, z1;\n  if (node) octs.push(new Octant(node, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1));\n  while (q = octs.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, z0 = q.z0, x1 = q.x1, y1 = q.y1, z1 = q.z1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2, zm = (z0 + z1) / 2;\n      if (child = node[7]) octs.push(new Octant(child, xm, ym, zm, x1, y1, z1));\n      if (child = node[6]) octs.push(new Octant(child, x0, ym, zm, xm, y1, z1));\n      if (child = node[5]) octs.push(new Octant(child, xm, y0, zm, x1, ym, z1));\n      if (child = node[4]) octs.push(new Octant(child, x0, y0, zm, xm, ym, z1));\n      if (child = node[3]) octs.push(new Octant(child, xm, ym, z0, x1, y1, zm));\n      if (child = node[2]) octs.push(new Octant(child, x0, ym, z0, xm, y1, zm));\n      if (child = node[1]) octs.push(new Octant(child, xm, y0, z0, x1, ym, zm));\n      if (child = node[0]) octs.push(new Octant(child, x0, y0, z0, xm, ym, zm));\n    }\n  }\n  return this;\n}\n","import Octant from \"./octant.js\";\n\nexport default function(callback) {\n  var octs = [], next = [], q;\n  if (this._root) octs.push(new Octant(this._root, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1));\n  while (q = octs.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, z0 = q.z0, x1 = q.x1, y1 = q.y1, z1 = q.z1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2, zm = (z0 + z1) / 2;\n      if (child = node[0]) octs.push(new Octant(child, x0, y0, z0, xm, ym, zm));\n      if (child = node[1]) octs.push(new Octant(child, xm, y0, z0, x1, ym, zm));\n      if (child = node[2]) octs.push(new Octant(child, x0, ym, z0, xm, y1, zm));\n      if (child = node[3]) octs.push(new Octant(child, xm, ym, z0, x1, y1, zm));\n      if (child = node[4]) octs.push(new Octant(child, x0, y0, zm, xm, ym, z1));\n      if (child = node[5]) octs.push(new Octant(child, xm, y0, zm, x1, ym, z1));\n      if (child = node[6]) octs.push(new Octant(child, x0, ym, zm, xm, y1, z1));\n      if (child = node[7]) octs.push(new Octant(child, xm, ym, zm, x1, y1, z1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.z0, q.x1, q.y1, q.z1);\n  }\n  return this;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nvar MAX_DIMENSIONS = 3;\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nexport function z(d) {\n  return d.z;\n}\n\nvar initialRadius = 10,\n    initialAngleRoll = Math.PI * (3 - Math.sqrt(5)), // Golden ratio angle\n    initialAngleYaw = Math.PI * 20 / (9 + Math.sqrt(221)); // Markov irrational number\n\nexport default function(nodes, numDimensions) {\n  numDimensions = numDimensions || 2;\n\n  var nDim = Math.min(MAX_DIMENSIONS, Math.max(1, Math.round(numDimensions))),\n      simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (nDim > 1) {\n          if (node.fy == null) node.y += node.vy *= velocityDecay;\n          else node.y = node.fy, node.vy = 0;\n        }\n        if (nDim > 2) {\n          if (node.fz == null) node.z += node.vz *= velocityDecay;\n          else node.z = node.fz, node.vz = 0;\n        }\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (node.fz != null) node.z = node.fz;\n      if (isNaN(node.x) || (nDim > 1 && isNaN(node.y)) || (nDim > 2 && isNaN(node.z))) {\n        var radius = initialRadius * (nDim > 2 ? Math.cbrt(0.5 + i) : (nDim > 1 ? Math.sqrt(0.5 + i) : i)),\n          rollAngle = i * initialAngleRoll,\n          yawAngle = i * initialAngleYaw;\n\n        if (nDim === 1) {\n          node.x = radius;\n        } else if (nDim === 2) {\n          node.x = radius * Math.cos(rollAngle);\n          node.y = radius * Math.sin(rollAngle);\n        } else { // 3 dimensions: use spherical distribution along 2 irrational number angles\n          node.x = radius * Math.sin(rollAngle) * Math.cos(yawAngle);\n          node.y = radius * Math.cos(rollAngle);\n          node.z = radius * Math.sin(rollAngle) * Math.sin(yawAngle);\n        }\n      }\n      if (isNaN(node.vx) || (nDim > 1 && isNaN(node.vy)) || (nDim > 2 && isNaN(node.vz))) {\n        node.vx = 0;\n        if (nDim > 1) { node.vy = 0; }\n        if (nDim > 2) { node.vz = 0; }\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random, nDim);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    numDimensions: function(_) {\n      return arguments.length\n          ? (nDim = Math.min(MAX_DIMENSIONS, Math.max(1, Math.round(_))), forces.forEach(initializeForce), simulation)\n          : nDim;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function() {\n      var args = Array.prototype.slice.call(arguments);\n      var x = args.shift() || 0,\n          y = (nDim > 1 ? args.shift() : null) || 0,\n          z = (nDim > 2 ? args.shift() : null) || 0,\n          radius = args.shift() || Infinity;\n\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          dz,\n          d2,\n          node,\n          closest;\n\n      radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - (node.y || 0);\n        dz = z - (node.z ||0);\n        d2 = dx * dx + dy * dy + dz * dz;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {binarytree} from \"d3-binarytree\";\nimport {quadtree} from \"d3-quadtree\";\nimport {octree} from \"d3-octree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y, z} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      nDim,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree =\n            (nDim === 1 ? binarytree(nodes, x)\n            :(nDim === 2 ? quadtree(nodes, x, y)\n            :(nDim === 3 ? octree(nodes, x, y, z)\n            :null\n        ))).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(treeNode) {\n    var strength = 0, q, c, weight = 0, x, y, z, i;\n    var numChildren = treeNode.length;\n\n    // For internal nodes, accumulate forces from children.\n    if (numChildren) {\n      for (x = y = z = i = 0; i < numChildren; ++i) {\n        if ((q = treeNode[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * (q.x || 0), y += c * (q.y || 0), z += c * (q.z || 0);\n        }\n      }\n      strength *= Math.sqrt(4 / numChildren); // scale accumulated strength according to number of dimensions\n\n      treeNode.x = x / weight;\n      if (nDim > 1) { treeNode.y = y / weight; }\n      if (nDim > 2) { treeNode.z = z / weight; }\n    }\n\n    // For leaf nodes, accumulate forces from coincident nodes.\n    else {\n      q = treeNode;\n      q.x = q.data.x;\n      if (nDim > 1) { q.y = q.data.y; }\n      if (nDim > 2) { q.z = q.data.z; }\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    treeNode.value = strength;\n  }\n\n  function apply(treeNode, x1, arg1, arg2, arg3) {\n    if (!treeNode.value) return true;\n    var x2 = [arg1, arg2, arg3][nDim-1];\n\n    var x = treeNode.x - node.x,\n        y = (nDim > 1 ? treeNode.y - node.y : 0),\n        z = (nDim > 2 ? treeNode.z - node.z : 0),\n        w = x2 - x1,\n        l = x * x + y * y + z * z;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n        if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * treeNode.value * alpha / l;\n        if (nDim > 1) { node.vy += y * treeNode.value * alpha / l; }\n        if (nDim > 2) { node.vz += z * treeNode.value * alpha / l; }\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (treeNode.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (treeNode.data !== node || treeNode.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n      if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (treeNode.data !== node) {\n      w = strengths[treeNode.data.index] * alpha / l;\n      node.vx += x * w;\n      if (nDim > 1) { node.vy += y * w; }\n      if (nDim > 2) { node.vz += z * w; }\n    } while (treeNode = treeNode.next);\n  }\n\n  force.initialize = function(_nodes, ...args) {\n    nodes = _nodes;\n    random = args.find(arg => typeof arg === 'function') || Math.random;\n    nDim = args.find(arg => [1, 2, 3].includes(arg)) || 2;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y, z) {\n  var nodes,\n      nDim,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  if (z == null) z = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = (node.y || 0) - y || 1e-6,\n          dz = (node.z || 0) - z || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy + dz * dz),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      if (nDim>1) { node.vy += dy * k; }\n      if (nDim>2) { node.vz += dz * k; }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(initNodes, ...args) {\n    nodes = initNodes;\n    nDim = args.find(arg => [1, 2, 3].includes(arg)) || 2;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = +_, force) : z;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(z) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      zz;\n\n  if (typeof z !== \"function\") z = constant(z == null ? 0 : +z);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vz += (zz[i] - node.z) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    zz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(zz[i] = +z(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : z;\n  };\n\n  return force;\n}\n"],"names":["x","y","z","nodes","strength","force","i","node","n","length","sx","sy","sz","initialize","_","arguments","tree","d","isNaN","parent","xm","xp","right","j","_root","leaf","data","x0","_x0","x1","_x1","_x","call","next","Array","this","defaultX","binarytree","Binarytree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","ym","yp","bottom","y0","_y0","y1","_y1","_y","defaultY","quadtree","Quadtree","child","source","target","pop","push","add","cover","isArray","from","xz","Float64Array","Infinity","Math","floor","visit","extent","find","radius","x2","q","x3","halves","abs","remove","retainer","previous","removeAll","root","size","callback","visitAfter","zm","zp","deep","z0","_z0","z1","_z1","_z","defaultZ","octree","Octree","yz","y2","y3","quads","dx","dy","d2","sqrt","random","vx","vy","vz","nDim","radii","iterations","xi","yi","zi","ri","ri2","k","prepare","index","apply","treeNode","arg1","arg2","arg3","arg4","arg5","arg6","args","rj","r","l","jiggle","pow","constant","_nodes","arg","includes","nodeById","nodeId","get","Error","links","strengths","distances","count","bias","id","link","min","distance","alpha","b","m","Map","map","initializeStrength","initializeDistance","zz","t","z2","z3","octs","dz","noop","value","dispatch","test","Dispatch","type","name","c","set","slice","concat","constructor","on","typename","types","T","trim","split","indexOf","hasOwnProperty","that","taskHead","taskTail","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","a","MAX_DIMENSIONS","initialRadius","initialAngleRoll","PI","initialAngleYaw","numDimensions","simulation","max","round","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","step","event","s","lcg","tick","forEach","fx","fy","fz","initializeNodes","cbrt","rollAngle","yawAngle","cos","sin","initializeForce","randomSource","delete","closest","shift","distanceMin2","distanceMax2","theta2","accumulate","weight","numChildren","w","distanceMin","distanceMax","theta","radiuses","initNodes"],"sourceRoot":""}