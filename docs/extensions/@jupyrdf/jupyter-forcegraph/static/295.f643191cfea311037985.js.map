{"version":3,"file":"295.f643191cfea311037985.js?v=f643191cfea311037985","mappings":"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","sources":["webpack://@jupyrdf/jupyter-forcegraph/./js/template-utils.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/theme-utils.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/utils.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/base.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-center.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-cluster.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-collision.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-link.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-manybody.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-radial.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-x.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-y.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/force-z.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/forces/dag.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/graph-camera.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/graph-data.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/graph-image.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/link-arrow.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/link-particles.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/link-selection.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/link-shape.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/link-tooltip.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/node-selection.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/node-shape.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/node-tooltip.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/scales.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/shapes/base.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/shapes/text.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/shapes/ellipse.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/shapes/rectangle.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/behaviors/wrappers.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/display/2d.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/display/3d.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/sources/dataframe.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/serializers/dataframe.ts","webpack://@jupyrdf/jupyter-forcegraph/./js/widgets/serializers/widget.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { Environment, Template } from 'nunjucks';\n\nimport { PromiseDelegate } from '@lumino/coreutils';\n\nexport const MATH_CONST = {\n  E: Math.E,\n  LN10: Math.LN10,\n  LN2: Math.LN2,\n  LOG10E: Math.LOG10E,\n  LOG2E: Math.LOG2E,\n  PI: Math.PI,\n  SQRT1_2: Math.SQRT1_2,\n  SQRT2: Math.SQRT2,\n};\n\nexport const MATH_UNARY = [\n  Math.acos,\n  Math.acosh,\n  Math.asin,\n  Math.asinh,\n  Math.atan,\n  Math.atanh,\n  Math.cbrt,\n  Math.ceil,\n  Math.cos,\n  Math.cosh,\n  Math.exp,\n  Math.expm1,\n  Math.floor,\n  Math.fround,\n  Math.log,\n  Math.log10,\n  Math.log1p,\n  Math.log2,\n  Math.sign,\n  Math.sin,\n  Math.sinh,\n  Math.sqrt,\n  Math.tan,\n  Math.tanh,\n  Math.trunc,\n];\n\nexport const MATH_BINARY = [Math.imul, Math.atan2];\n\nexport const MATH_N_ARY = [Math.min, Math.max, Math.hypot];\n\nnamespace Private {\n  export let env: Environment | null = null;\n  export let loading: PromiseDelegate<Environment> | null = null;\n  export let TemplateClass: typeof Template | null = null;\n}\n\nexport async function newTemplate(src: string): Promise<Template> {\n  const env = await nunjucksEnv();\n  return new Private.TemplateClass(src, env, null, true);\n}\n\nexport async function nunjucksEnv(): Promise<Environment> {\n  if (Private.env) {\n    return Private.env;\n  }\n  if (Private.loading) {\n    await Private.loading.promise;\n    return Private.env;\n  }\n  Private.loading = new PromiseDelegate();\n  const nunjucks = await import('nunjucks');\n  const env = new nunjucks.Environment();\n  // install custom tags\n  addCustomGlobals(env);\n\n  // save in namespace\n  Private.TemplateClass = nunjucks.Template;\n  Private.env = env;\n  Private.loading.resolve(env);\n  return env;\n}\n\nexport interface INAryJs {\n  (...values: number[]): number;\n}\n\nexport interface INAryPy {\n  (values: number[] | number, ...moreValues: number[]): number;\n}\n\n/**\n * Register globals in the environment that can be called by any template.\n */\nfunction addCustomGlobals(env: Environment) {\n  for (const [constName, constValue] of Object.entries(MATH_CONST)) {\n    env.addGlobal(constName, constValue);\n  }\n  for (const fn of MATH_UNARY) {\n    env.addGlobal(fn.name, fn);\n  }\n  for (const fn of MATH_BINARY) {\n    env.addGlobal(fn.name, fn);\n  }\n  for (const fn of MATH_N_ARY) {\n    env.addGlobal(fn.name, wrapNAry(fn));\n  }\n  env.addGlobal('now', () => performance.now());\n  env.addFilter('where', (iterable: any[], attr: string, value: any) => {\n    const results: any[] = [];\n    for (const item of iterable) {\n      if (item[attr] === value) {\n        results.push(item);\n      }\n    }\n    return results;\n  });\n}\n\n/**\n * Make a `Math` method more like python.\n */\nfunction wrapNAry(jsFn: INAryJs): INAryPy {\n  function pyFn(values: number[] | number, ...rest: number[]) {\n    return Array.isArray(values) ? jsFn(...values) : jsFn(values, ...rest);\n  }\n  return pyFn;\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IThemeManager } from '@jupyterlab/apputils';\n\nimport { EMOJI } from './tokens';\n\nnamespace Private {\n  export let themeManager: IThemeManager | null = null;\n  let _themeVars: Record<string, string> = {};\n  export function onThemeChanged() {\n    if (!themeManager) {\n      return;\n    }\n    _themeVars = {};\n  }\n  export function getCssVar(varName: string) {\n    if (_themeVars[varName] == null) {\n      _themeVars[varName] = window\n        .getComputedStyle(document.body)\n        .getPropertyValue(varName);\n    }\n    return _themeVars[varName];\n  }\n}\n\nexport function getThemeManager(): IThemeManager | null {\n  return Private.themeManager;\n}\n\nexport function setThemeManager(themeManager: IThemeManager) {\n  /* istanbul ignore next */\n  if (Private.themeManager) {\n    console.warn(`${EMOJI} theme manager already registered, ignoring`, themeManager);\n    return;\n  }\n  Private.themeManager = themeManager;\n  if (themeManager) {\n    themeManager.themeChanged.connect(Private.onThemeChanged);\n  }\n}\n\nexport const CSS_VAR = new RegExp(/var\\s*\\(\\s*(--[^\\)]+)\\s*\\)/, 'g');\n\nexport function cssVarReplacer(\n  searchValue: string | RegExp,\n  varName: string,\n  offset: number,\n  string: any,\n  groups: any\n): string {\n  return Private.getCssVar(varName);\n}\n\nexport function replaceCssVars(value: any) {\n  return typeof value === 'string' ? value.replaceAll(CSS_VAR, cssVarReplacer) : value;\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { DEBUG, ECoerce, EMOJI, FALSEY, TCoercer } from './tokens';\n\nexport function noop(...args: any[]): null {\n  return null;\n}\n\nexport function yes(): true {\n  return true;\n}\n\nexport function identity<T>(value: T): T {\n  return value;\n}\n\nexport function isNumeric(val: string): boolean {\n  return !isNaN(Number(val));\n}\n\nexport function functor(value: any) {\n  return () => value;\n}\n\nexport function coerceBoolish(value: string): boolean {\n  return !FALSEY.includes(value.toLocaleLowerCase().trim());\n}\n\nexport function coerceNumber(value: string): number {\n  return Number(value);\n}\n\nexport function coerceArray(value: string): any[] {\n  var new_value: any;\n  try {\n    new_value = JSON.parse(value);\n  } catch (e) {\n    DEBUG && console.warn(`${EMOJI} could not parse ${value} as JSON`);\n    new_value = null;\n  }\n  if (Array.isArray(new_value)) {\n    return new_value;\n  }\n  DEBUG &&\n    console.log(`${EMOJI} could not parse ${value} as an array, setting value to []`);\n  return [];\n}\n\nexport function getCoercer(coerce: ECoerce): TCoercer {\n  switch (coerce) {\n    case ECoerce.boolish:\n      return coerceBoolish;\n    case ECoerce.numeric:\n      return coerceNumber;\n    case ECoerce.array:\n      return coerceArray;\n    default:\n      return identity;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { LinkObject, NodeObject } from 'force-graph';\n\nimport { JSONExt } from '@lumino/coreutils';\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { IBackboneModelOptions, WidgetModel } from '@jupyter-widgets/base';\n\nimport { newTemplate } from '../../template-utils';\nimport {\n  DEBUG,\n  DEFAULT_BEHAVIOR_RANK,\n  ECoerce,\n  EMOJI,\n  EUpdate,\n  IBehave,\n  TCoercer,\n  TUpdateKind,\n  WIDGET_DEFAULTS,\n} from '../../tokens';\nimport { functor, getCoercer, noop } from '../../utils';\n\nexport class BehaviorModel extends WidgetModel implements IBehave {\n  protected _updateRequested: Signal<IBehave, TUpdateKind>;\n  protected _graphDataUpdateRequested: Signal<IBehave, void>;\n  protected _graphCameraUpdateRequested: Signal<IBehave, void>;\n\n  defaults() {\n    return { ...super.defaults(), ...WIDGET_DEFAULTS };\n  }\n\n  get rank(): number {\n    const rank = this.get('rank');\n    return rank == null ? DEFAULT_BEHAVIOR_RANK : rank;\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:rank', this.onRankChange);\n    this._updateRequested = new Signal(this);\n    this._graphDataUpdateRequested = new Signal(this);\n    this._graphCameraUpdateRequested = new Signal(this);\n  }\n\n  onRankChange() {\n    this._updateRequested.emit(EUpdate.Behavior);\n  }\n\n  get updateRequested(): ISignal<IBehave, TUpdateKind> {\n    return this._updateRequested;\n  }\n\n  get graphDataUpdateRequested(): ISignal<IBehave, void> {\n    return this._graphDataUpdateRequested;\n  }\n\n  get graphCameraUpdateRequested(): ISignal<IBehave, void> {\n    return this._graphCameraUpdateRequested;\n  }\n}\n\nexport class FacetedModel extends BehaviorModel {\n  static model_name = 'FacetedModel';\n\n  /** Required in subclass. All novel traits of a faceted model might be dynamic  */\n  static serializers = {\n    ...WidgetModel.serializers,\n  };\n\n  /** Facets are cached as handlers for a specific entity. */\n  protected _nodeFacets: Record<string, Function> = JSONExt.emptyObject as any;\n  protected _linkFacets: Record<string, Function> = JSONExt.emptyObject as any;\n\n  /** Names of facets are calculated once, on initialization. */\n  protected _facetNames: string[] | null = null;\n\n  /** Required in subclass. Provides acesss to class (for names) and usually facets. */\n  protected get _modelClass(): typeof FacetedModel {\n    return FacetedModel;\n  }\n\n  /** Required in subclass.\n   * Provides acesss to the class which has facet serlializers, if different from the model class.\n   */\n  protected get _facetClass(): typeof FacetedModel {\n    return this._modelClass;\n  }\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: this._modelClass.model_name,\n    };\n  }\n\n  get updateRequested(): ISignal<IBehave, TUpdateKind> {\n    return this._updateRequested;\n  }\n\n  /** Initialize the model and wire up listeners.  */\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    let events = '';\n    for (const facet of this.facetNames) {\n      events += `change:${facet} `;\n    }\n    this.on(events, this._onFacetsChanged, this);\n    void this._onFacetsChanged.call(this);\n  }\n\n  /** Handle the facets changing. */\n  protected async _onFacetsChanged() {\n    this._nodeFacets = JSONExt.emptyObject as any;\n    this._linkFacets = JSONExt.emptyObject as any;\n    this._updateRequested.emit(void 0);\n  }\n\n  /** Populate facet handlers. */\n  async ensureFacets() {\n    const nodeFacets: Record<string, Function> = {};\n    const linkFacets: Record<string, Function> = {};\n    for (const facetName of this.facetNames) {\n      let facet = this.get(facetName);\n      if (facet?.ensureHandlers) {\n        await facet.ensureHandlers();\n        nodeFacets[facetName] = facet.nodeHandler;\n        linkFacets[facetName] = facet.linkHandler;\n        facet.updateRequested.connect(this._onFacetsChanged, this);\n        continue;\n      }\n\n      if (facet != null) {\n        nodeFacets[facetName] = linkFacets[facetName] = functor(facet);\n      }\n    }\n    this._nodeFacets = nodeFacets;\n    this._linkFacets = linkFacets;\n  }\n\n  /** Lazily calculate asset names. */\n  protected get facetNames() {\n    if (this._facetNames == null) {\n      const baseKeys = [...Object.keys(FacetedModel.serializers)];\n      const facetNames: string[] = [];\n      for (const key of Object.keys(this._facetClass.serializers)) {\n        if (baseKeys.includes(key)) {\n          continue;\n        }\n        facetNames.push(key);\n      }\n      this._facetNames = facetNames;\n    }\n    return this._facetNames;\n  }\n\n  wrapForContext<T>(fn: Function, contextName: string, contextAllName: string) {\n    function wrapped(context: T, i: number, contextAll: T[]) {\n      let value: number | boolean | null;\n      try {\n        const finalContext = {\n          [contextName]: context,\n          i,\n          [contextAllName]: contextAll,\n        };\n        let rendered = fn(finalContext);\n        value = rendered == null ? null : rendered;\n        if (typeof value != 'boolean') {\n          if (value == null || isNaN(value)) {\n            value = null;\n          }\n        }\n      } catch (err) {\n        DEBUG && console.warn(EMOJI, err);\n        value = null;\n      }\n      return value;\n    }\n\n    return wrapped;\n  }\n\n  protected wrapForNode(handler: CallableFunction): CallableFunction {\n    return this.wrapForContext<NodeObject>(handler, 'node', 'nodes');\n  }\n\n  protected wrapForLink(handler: CallableFunction): CallableFunction {\n    return this.wrapForContext<LinkObject>(handler, 'link', 'links');\n  }\n}\n\nexport class DynamicModel extends BehaviorModel {\n  protected _nodeHandler: Function | null = null;\n  protected _linkHandler: Function | null = null;\n\n  defaults() {\n    return { ...super.defaults(), value: '', coerce: null };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:value', this.valueChanged, this);\n  }\n\n  valueChanged(): void {\n    this._nodeHandler = null;\n    this._linkHandler = null;\n    this._updateRequested.emit(void 0);\n  }\n\n  get updateRequested(): ISignal<IBehave, TUpdateKind> {\n    return this._updateRequested;\n  }\n\n  async ensureHandlers() {\n    // nothing to see here\n  }\n\n  get value(): string {\n    return this.get('value') || '';\n  }\n\n  get nodeHandler(): Function | null {\n    return this._nodeHandler || noop;\n  }\n\n  get linkHandler(): Function | null {\n    return this._linkHandler || noop;\n  }\n\n  get coerce(): ECoerce | null {\n    return this.get('coerce') || null;\n  }\n}\n\nexport class NunjucksModel extends DynamicModel {\n  async ensureHandlers() {\n    if (this._nodeHandler) {\n      return;\n    }\n\n    function handler(opts: any) {\n      return coercer(tmpl.render(opts));\n    }\n\n    const tmpl = await newTemplate(this.value);\n    const coercer = getCoercer(this.coerce);\n    this._nodeHandler = handler;\n    this._linkHandler = this._nodeHandler;\n  }\n}\n\nexport class ColumnModel extends DynamicModel {\n  async ensureHandlers() {\n    if (this._nodeHandler) {\n      return;\n    }\n    const { value } = this;\n\n    if (value == null) {\n      this._nodeHandler = noop;\n      this._linkHandler = noop;\n      return;\n    }\n\n    const coercer = getCoercer(this.coerce);\n\n    const [_nodeHandler, _linkHandler] = await this._buildHandlers(value, coercer);\n\n    this._nodeHandler = _nodeHandler;\n    this._linkHandler = _linkHandler;\n  }\n\n  async _buildHandlers(value: any, coercer: TCoercer): Promise<Function[]> {\n    function _nodeHandler(options: any) {\n      return coercer(options.node ? options.node[value] : null);\n    }\n\n    function _linkHandler(options: any) {\n      return coercer(options.link ? options.link[value] : null);\n    }\n\n    return [_nodeHandler, _linkHandler];\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { ObjectHash } from 'backbone';\nimport type { ForceGraphInstance, NodeObject } from 'force-graph/dist/force-graph';\n\nimport { IBackboneModelOptions, WidgetModel } from '@jupyter-widgets/base';\n\nimport { EUpdate, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\nimport { BehaviorModel, FacetedModel } from '../base';\n\nexport type TForceRecord = Record<string, FacetedForceModel | null>;\n\nexport class FacetedForceModel extends FacetedModel implements IForce {\n  static model_name = 'FacetedForceModel';\n  _force: TAnyForce;\n\n  forceFactory(): TAnyForce {\n    /* istanbul ignore next */\n    throw new Error('Not implemented');\n  }\n\n  initialize(attributes: ObjectHash, options: IBackboneModelOptions): void {\n    super.initialize(attributes, options);\n    this._force = this.forceFactory();\n    this.on('change:active', this._onFacetsChanged);\n  }\n\n  get active(): boolean {\n    return this.get('active');\n  }\n\n  get force(): TAnyForce {\n    return this._force;\n  }\n}\n\nexport class GraphForcesModel extends BehaviorModel {\n  static model_name = 'GraphForcesModel';\n  static serializers = {\n    ...WidgetModel.serializers,\n    forces: widget_serialization,\n  };\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: GraphForcesModel.model_name,\n      forces: {},\n      warmup_ticks: 0,\n      cooldown_ticks: -1,\n      alpha_min: 0.0,\n      alpha_decay: 0.228,\n      velocity_decay: 0.4,\n    };\n  }\n\n  initialize(attributes: ObjectHash, options: IBackboneModelOptions): void {\n    super.initialize(attributes, options);\n    this.on(\n      'change:forces change:cooldown_ticks change:warmup_ticks change:alpha_min change:alpha_decay change:velocity_decay',\n      this.onForcesChange,\n      this\n    );\n    this.onForcesChange();\n  }\n\n  get forces(): TForceRecord {\n    return this.get('forces') || {};\n  }\n\n  async onForcesChange(): Promise<void> {\n    const { forces, previousForces } = this;\n\n    for (const force of Object.values(previousForces)) {\n      if (force) {\n        force.updateRequested.disconnect(this.onForceUpdated, this);\n      }\n    }\n\n    for (const force of Object.values(forces)) {\n      if (force) {\n        force.updateRequested.connect(this.onForceUpdated, this);\n      }\n    }\n    void this.onForceUpdated();\n  }\n\n  get previousForces(): TForceRecord {\n    return (this.previous && this.previous('forces')) || {};\n  }\n\n  protected async onForceUpdated(change?: any): Promise<void> {\n    const facetPromises: Promise<void>[] = [];\n    for (const force of Object.values(this.forces)) {\n      if (force?.ensureFacets) {\n        facetPromises.push(force.ensureFacets());\n      }\n    }\n    if (facetPromises) {\n      await Promise.all(facetPromises);\n    }\n\n    this._updateRequested.emit(EUpdate.Reheat);\n  }\n\n  get warmupTicks(): number {\n    return this.get('warmup_ticks');\n  }\n\n  get cooldownTicks(): number {\n    const ticks = this.get('cooldown_ticks');\n    return ticks < 0 ? Infinity : ticks;\n  }\n\n  get alphaMin(): number {\n    return this.get('alpha_min');\n  }\n\n  get alphaDecay(): number {\n    return this.get('alpha_decay');\n  }\n\n  get velocityDecay(): number {\n    return this.get('velocity_decay');\n  }\n\n  checkPositions(graph: ForceGraphInstance) {\n    let { nodes, links } = graph.graphData();\n\n    let anyNaN = false;\n    for (let n of nodes) {\n      if (isNaN(n.x) || isNaN(n.y)) {\n        anyNaN = true;\n        break;\n      }\n    }\n    if (anyNaN) {\n      for (let n of nodes) {\n        n.x = NaN;\n        n.y = NaN;\n        // n.z = NaN,\n        n.vx = NaN;\n        n.vy = NaN;\n        // n.vz = NaN;\n      }\n      initializeNodes(nodes);\n      // parse links\n      links.forEach((link) => {\n        let source = link.source as any;\n        if (source !== nodes[source.index]) {\n          console.warn('link source mismatch', source, nodes[source.index]);\n        }\n      });\n    }\n  }\n}\n\n// initializeNodes function from `d3-force-3d/simulation.js`\nfunction initializeNodes(nodes: NodeObject[], numDimensions = 2) {\n  let MAX_DIMENSIONS = 3;\n  let nDim = Math.min(MAX_DIMENSIONS, Math.max(1, Math.round(numDimensions)));\n  var initialRadius = 10,\n    initialAngleRoll = Math.PI * (3 - Math.sqrt(5)), // Golden ratio angle\n    initialAngleYaw = (Math.PI * 20) / (9 + Math.sqrt(221)); // Markov irrational number\n\n  for (var i = 0, n = nodes.length, node; i < n; ++i) {\n    (node = nodes[i]), (node.index = i);\n    if (node.fx != null) node.x = node.fx;\n    if (node.fy != null) node.y = node.fy;\n    if (node.fz != null) node.z = node.fz;\n    if (isNaN(node.x) || (nDim > 1 && isNaN(node.y)) || (nDim > 2 && isNaN(node.z))) {\n      var radius =\n          initialRadius *\n          (nDim > 2 ? Math.cbrt(0.5 + i) : nDim > 1 ? Math.sqrt(0.5 + i) : i),\n        rollAngle = i * initialAngleRoll,\n        yawAngle = i * initialAngleYaw;\n\n      if (nDim === 1) {\n        node.x = radius;\n      } else if (nDim === 2) {\n        node.x = radius * Math.cos(rollAngle);\n        node.y = radius * Math.sin(rollAngle);\n      } else {\n        // 3 dimensions: use spherical distribution along 2 irrational number angles\n        node.x = radius * Math.sin(rollAngle) * Math.cos(yawAngle);\n        node.y = radius * Math.cos(rollAngle);\n        node.z = radius * Math.sin(rollAngle) * Math.sin(yawAngle);\n      }\n    }\n    if (\n      isNaN(node.vx) ||\n      (nDim > 1 && isNaN(node.vy)) ||\n      (nDim > 2 && isNaN(node.vz))\n    ) {\n      node.vx = 0;\n      if (nDim > 1) {\n        node.vy = 0;\n      }\n      if (nDim > 2) {\n        node.vz = 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceCenter as d3ForceCenter } from 'd3-force-3d';\n\nimport { IBehave, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class CenterForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'CenterForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    x: widget_serialization,\n    y: widget_serialization,\n    z: widget_serialization,\n  };\n\n  _force: d3ForceCenter;\n\n  protected get _modelClass(): typeof CenterForceModel {\n    return CenterForceModel;\n  }\n\n  forceFactory(): d3ForceCenter {\n    return d3ForceCenter();\n  }\n\n  get force(): TAnyForce {\n    const { x, y, z } = this._nodeFacets;\n\n    let force = this._force;\n    force = x == null ? force : force.x(x());\n    force = y == null ? force : force.y(y());\n    force = z == null ? force : force.z(z());\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { default as d3ClusterForce } from 'd3-force-cluster-3d';\nimport { NodeObject } from 'force-graph/dist/force-graph';\n\nimport { IBehave, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport interface IClusterCenter {\n  radius: number;\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface IClusterFunctions {\n  radius: CallableFunction | null;\n  x: CallableFunction | null;\n  y: CallableFunction | null;\n  z: CallableFunction | null;\n}\n\nexport interface INodeObjectWithCluster {\n  radius?: number;\n}\n\nexport class ClusterForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'ClusterForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    strength: widget_serialization,\n    inertia: widget_serialization,\n    // node template\n    key: widget_serialization,\n    // cluster template\n    radius: widget_serialization,\n    y: widget_serialization,\n    x: widget_serialization,\n    z: widget_serialization,\n  };\n\n  _force: d3ClusterForce;\n  _clusters = new Map<string | number, IClusterCenter>();\n\n  protected get _modelClass(): typeof ClusterForceModel {\n    return ClusterForceModel;\n  }\n\n  forceFactory(): d3ClusterForce {\n    return d3ClusterForce();\n  }\n\n  get force(): TAnyForce {\n    const { strength, inertia, key, radius, x, y, z } = this._nodeFacets;\n\n    let force = this._force;\n    force = inertia == null ? force : force.centerInertia(inertia());\n    force = strength == null ? force : force.strength(strength());\n\n    force =\n      key == null\n        ? force\n        : force.centers(this.makeCenters(this.wrapForNode(key), { radius, x, y, z }));\n\n    return force;\n  }\n\n  makeCenters(clusterKey: CallableFunction, clusterFunctions: IClusterFunctions) {\n    const centers = (node: INodeObjectWithCluster, i: number, nodes: NodeObject[]) => {\n      if (!node.radius) {\n        node.radius = 1;\n      }\n      const key = clusterKey(node, i, nodes);\n      let cluster = this._clusters.get(key);\n      if (cluster == null) {\n        cluster = { x: 0, y: 0, z: 0, radius: 0 };\n        this._clusters.set(key, cluster);\n      }\n\n      const { x, y, z, radius } = clusterFunctions;\n      const ctx = { cluster, node, key, nodes };\n      if (radius != null) {\n        cluster.radius = radius(ctx);\n      }\n      if (x != null) {\n        cluster.x = x(ctx);\n      }\n      if (y != null) {\n        cluster.y = y(ctx);\n      }\n      if (z != null) {\n        cluster.z = z(ctx);\n      }\n      this.fixCenter(cluster);\n      return cluster;\n    };\n\n    return centers;\n  }\n\n  fixCenter(center: IClusterCenter) {\n    if (isNaN(center.x)) {\n      center.x = 0;\n    }\n    if (isNaN(center.y)) {\n      center.y = 0;\n    }\n    if (isNaN(center.z)) {\n      center.z = 0;\n    }\n    if (isNaN(center.radius) || center.radius == null) {\n      center.radius = 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceCollide as d3ForceCollision } from 'd3-force-3d';\n\nimport { IBehave, IForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class CollisionForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'CollisionForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    radius: widget_serialization,\n    strength: widget_serialization,\n  };\n\n  _force: d3ForceCollision;\n\n  protected get _modelClass(): typeof CollisionForceModel {\n    return CollisionForceModel;\n  }\n\n  forceFactory(): d3ForceCollision {\n    return d3ForceCollision();\n  }\n\n  get force(): d3ForceCollision {\n    const { radius, strength } = this._nodeFacets;\n\n    let force = this._force;\n    force = radius == null ? force : force.radius(this.wrapForNode(radius));\n    force = strength == null ? force : force.strength(strength());\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\n// import type d3Force from 'd3-force';\nimport { forceLink as d3ForceLink } from 'd3-force-3d';\n\nimport { IBehave, IForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class LinkForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'LinkForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    strength: widget_serialization,\n    distance: widget_serialization,\n  };\n\n  _force: d3ForceLink;\n\n  protected get _modelClass(): typeof LinkForceModel {\n    return LinkForceModel;\n  }\n\n  forceFactory(): d3ForceLink {\n    return d3ForceLink();\n  }\n\n  get force(): d3ForceLink {\n    const { strength, distance } = this._linkFacets;\n\n    let force = this._force;\n    force = strength == null ? force : force.strength(this.wrapForLink(strength));\n    force = distance == null ? force : force.distance(this.wrapForLink(distance));\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceManyBody as d3ForceManyBody } from 'd3-force-3d';\n\nimport { IBehave, IForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class ManyBodyForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'ManyBodyForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    strength: widget_serialization,\n    theta: widget_serialization,\n    distance_max: widget_serialization,\n    distance_min: widget_serialization,\n  };\n\n  _force: d3ForceManyBody;\n\n  forceFactory(): d3ForceManyBody {\n    return d3ForceManyBody();\n  }\n\n  protected get _modelClass(): typeof ManyBodyForceModel {\n    return ManyBodyForceModel;\n  }\n\n  get force(): d3ForceManyBody {\n    const { strength, theta, distance_max, distance_min } = this._nodeFacets;\n\n    let force = this._force;\n    force = strength == null ? force : force.strength(this.wrapForNode(strength));\n\n    force = theta == null ? force : force.theta(theta());\n    force = distance_max == null ? force : force.distanceMax(distance_max());\n    force = distance_min == null ? force : force.distanceMin(distance_min());\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceRadial as d3ForceRadial } from 'd3-force-3d';\n\nimport { IBehave, IForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class RadialForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'RadialForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    x: widget_serialization,\n    y: widget_serialization,\n    z: widget_serialization,\n    radius: widget_serialization,\n    strength: widget_serialization,\n  };\n\n  _force: d3ForceRadial;\n\n  protected get _modelClass(): typeof RadialForceModel {\n    return RadialForceModel;\n  }\n\n  forceFactory(): d3ForceRadial {\n    return d3ForceRadial();\n  }\n\n  get force(): d3ForceRadial {\n    const { strength, radius, x, y, z } = this._nodeFacets;\n\n    let force = this._force;\n    force = strength == null ? force : force.strength(this.wrapForNode(strength));\n    force = radius == null ? force : force.radius(this.wrapForNode(radius));\n    force = x == null ? force : force.x(x());\n    force = y == null ? force : force.y(y());\n    force = z == null ? force : force.z(z());\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceX as d3XForce } from 'd3-force-3d';\n\nimport { IBehave, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class XForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'XForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    x: widget_serialization,\n    strength: widget_serialization,\n  };\n\n  _force: d3XForce;\n\n  protected get _modelClass(): typeof XForceModel {\n    return XForceModel;\n  }\n\n  forceFactory(): d3XForce {\n    return d3XForce();\n  }\n\n  get force(): TAnyForce {\n    const { x, strength } = this._nodeFacets;\n\n    let force = this._force;\n    force = x == null ? force : force.x(this.wrapForNode(x));\n    force = strength == null ? force : force.strength(this.wrapForNode(strength));\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceY as d3YForce } from 'd3-force-3d';\n\nimport { IBehave, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class YForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'YForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    y: widget_serialization,\n    strength: widget_serialization,\n  };\n\n  _force: d3YForce;\n\n  protected get _modelClass(): typeof YForceModel {\n    return YForceModel;\n  }\n\n  forceFactory(): d3YForce {\n    return d3YForce();\n  }\n\n  get force(): TAnyForce {\n    const { y, strength } = this._nodeFacets;\n\n    let force = this._force;\n    force = y == null ? force : force.y(this.wrapForNode(y));\n    force = strength == null ? force : force.strength(this.wrapForNode(strength));\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { forceZ as d3ZForce } from 'd3-force-3d';\n\nimport { IBehave, IForce, TAnyForce } from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class ZForceModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'ZForceModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    z: widget_serialization,\n    strength: widget_serialization,\n  };\n\n  _force: d3ZForce;\n\n  protected get _modelClass(): typeof ZForceModel {\n    return ZForceModel;\n  }\n\n  forceFactory(): d3ZForce {\n    return d3ZForce();\n  }\n\n  get force(): TAnyForce {\n    const { z, strength } = this._nodeFacets;\n\n    let force = this._force;\n    force = z == null ? force : force.z(this.wrapForNode(z));\n    force = strength == null ? force : force.strength(this.wrapForNode(strength));\n    return force;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { ForceGraphInstance } from 'force-graph/dist/force-graph';\n\nimport { IBehave, IForce } from '../../../tokens';\nimport { yes } from '../../../utils';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport { FacetedForceModel } from './force';\n\nexport class DAGBehaviorModel extends FacetedForceModel implements IBehave, IForce {\n  static model_name = 'DAGBehaviorModel';\n\n  static serializers = {\n    ...FacetedForceModel.serializers,\n    mode: widget_serialization,\n    level_distance: widget_serialization,\n    // node template\n    node_filter: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof DAGBehaviorModel {\n    return DAGBehaviorModel;\n  }\n\n  forceFactory(): void {\n    // raises an error otherwise\n  }\n\n  refreshBehavior(graph: ForceGraphInstance) {\n    const { mode, level_distance, node_filter } = this._nodeFacets;\n\n    const activeMode = this.active && mode ? mode() : null;\n    if (activeMode) {\n      graph.dagMode(activeMode);\n      graph.dagLevelDistance(level_distance ? level_distance() : null);\n\n      const nodeFilter = node_filter ? (this.wrapForNode(node_filter) as any) : yes;\n\n      graph.dagNodeFilter(nodeFilter);\n    } else {\n      graph.dagMode(null);\n      graph.dagLevelDistance(null);\n      graph.dagNodeFilter(yes);\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { ForceGraph3DInstance } from '3d-force-graph';\nimport { ForceGraphInstance } from 'force-graph';\n\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport {\n  IBehave,\n  IUpdateGraphCameraOptions,\n  IZoomData,\n  WIDGET_DEFAULTS,\n} from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { FacetedModel } from './base';\n\nclass ZoomBase extends FacetedModel implements IBehave {\n  get zoom(): number | null {\n    return this.get('zoom');\n  }\n\n  set zoom(zoom: number | null) {\n    this.set('zoom', zoom);\n  }\n\n  get lookAt() {\n    return this.get('look_at');\n  }\n\n  set lookAt(lookAt: number[]) {\n    this.set('look_at', lookAt && lookAt.length ? lookAt : null);\n  }\n\n  get center(): number[] {\n    return this.get('center');\n  }\n\n  set center(center: number[]) {\n    this.set('center', center);\n  }\n\n  is3d(graph: ForceGraphInstance | ForceGraph3DInstance) {\n    return graph.hasOwnProperty('nodeThreeObject');\n  }\n}\n\nexport class GraphCameraModel extends ZoomBase implements IBehave {\n  static model_name = 'GraphCameraModel';\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: GraphCameraModel.model_name,\n      zoom: 0,\n      center: [0, 0],\n      visible: [],\n      capturing: false,\n    };\n  }\n\n  get visible(): number[] {\n    return this.get('visible') || [];\n  }\n\n  set visible(visible: number[]) {\n    this.set('visible', visible);\n  }\n\n  get captureVisible(): boolean {\n    return this.get('capturing');\n  }\n\n  set captureVisible(captureVisible: boolean) {\n    this.set('capturing', captureVisible);\n  }\n\n  onZoom(zoom: IZoomData): void {\n    const { graph, k, lookAt } = zoom;\n    const is3d = this.is3d(graph);\n    const z = zoom.z == null ? [] : [zoom.z];\n    this.center = [zoom.x, zoom.y, ...z];\n    this.zoom = k;\n    this.lookAt = zoom.lookAt != null ? [lookAt.x, lookAt.y, lookAt.z] : null;\n    if (this.captureVisible) {\n      this.visible = is3d ? this.getVisible3d(zoom) : this.getVisible2d(zoom);\n    }\n\n    try {\n      this.save();\n    } catch {\n      // nothing to do here\n    }\n  }\n\n  protected getVisible3d(zoom: IZoomData): number[] {\n    const graph = zoom.graph as any as ForceGraph3DInstance;\n    const visible = [];\n    let i = 0;\n\n    const { THREE } = zoom.iframeClasses;\n    const camera = graph.camera();\n\n    const frustum: THREE.Frustum = new THREE.Frustum().setFromProjectionMatrix(\n      new THREE.Matrix4().multiplyMatrices(\n        camera.projectionMatrix,\n        camera.matrixWorldInverse\n      )\n    );\n\n    for (let node of graph.graphData().nodes) {\n      let __threeObj: THREE.Object3D = (node as any).__threeObj;\n      if (\n        frustum.containsPoint(__threeObj.position) ||\n        frustum.intersectsObject(__threeObj)\n      ) {\n        visible.push(i);\n      }\n      i++;\n    }\n\n    return visible;\n  }\n\n  protected getVisible2d(zoom: IZoomData): number[] {\n    const { graph, k } = zoom;\n    const halfW = graph.width() / 2 / k;\n    const halfH = graph.height() / 2 / k;\n    const bx = [zoom.x - halfW, zoom.x + halfW];\n    const by = [zoom.y - halfH, zoom.y + halfH];\n    const visible = [];\n    let i = 0;\n    for (let { x, y } of graph.graphData().nodes) {\n      if (x >= bx[0] && x <= bx[1] && y >= by[0] && y <= by[1]) {\n        visible.push(i);\n      }\n      i++;\n    }\n    return visible;\n  }\n}\n\nexport class GraphDirectorModel extends ZoomBase implements IBehave {\n  static model_name = 'GraphDirectorModel';\n\n  private _resetting = false;\n\n  static serializers = {\n    ...FacetedModel.serializers,\n    visible: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof GraphDirectorModel {\n    return GraphDirectorModel;\n  }\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: GraphCameraModel.model_name,\n      zoom: null,\n      visible: null,\n      fit_padding: null,\n      center: null,\n      zoom_first: false,\n      zoom_duration: 0.2,\n      pan_duration: 0.2,\n      fit_duration: 0.2,\n    };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on(\n      'change:zoom change:center change:visible change:fit_padding',\n      this.onZoomChanged,\n      this\n    );\n    this.updateRequested.connect(this.onZoomChanged, this);\n    this.onZoomChanged();\n  }\n\n  get zoomFirst(): boolean {\n    return this.get('zoom_first');\n  }\n\n  set zoomFirst(zoomFirst: boolean) {\n    this.set('zoom_first', zoomFirst);\n  }\n\n  get zoomDuration(): number {\n    return (this.get('zoom_duration') || 0) * 1000;\n  }\n\n  set zoomDuration(zoomDuration: number) {\n    this.set('zoom_duration', zoomDuration);\n  }\n\n  get panDuration(): number {\n    return (this.get('pan_duration') || 0) * 1000;\n  }\n\n  set panDuration(panDuration: number) {\n    this.set('pan_duration', panDuration);\n  }\n\n  get fitDuration(): number {\n    return (this.get('fit_duration') || 0) * 1000;\n  }\n\n  set fitDuration(fitDuration: number) {\n    this.set('fit_duration', fitDuration);\n  }\n\n  get fitPadding(): number {\n    return this.get('fit_padding');\n  }\n\n  set fitPadding(fitPadding: number) {\n    this.set('fit_padding', fitPadding);\n  }\n\n  onZoomChanged() {\n    if (!this._resetting) {\n      this._graphCameraUpdateRequested.emit();\n    }\n  }\n\n  async updateGraphCamera(options: IUpdateGraphCameraOptions): Promise<void> {\n    const { graph } = options;\n    const is3d = this.is3d(graph);\n\n    let visible = null;\n\n    if (this.get('visible')) {\n      await this.ensureFacets();\n      visible = this._nodeFacets['visible'];\n    }\n\n    if (visible) {\n      const wrappedFit = this.wrapForNode(visible) as any;\n      graph.zoomToFit(this.fitDuration, this.fitPadding, wrappedFit);\n    } else {\n      if (is3d) {\n        const { lookAt, center } = this;\n        if (!lookAt || !center) {\n          return;\n        }\n        let graph3 = graph as any as ForceGraph3DInstance;\n        const { Vector3 } = options.iframeClasses.THREE;\n        const vLookAt: THREE.Vector3 = new Vector3(...lookAt);\n        const [x, y, z] = center;\n        graph3.cameraPosition({ x, y, z }, vLookAt, this.zoomDuration);\n      } else {\n        const k = this.zoom;\n        const [x, y] = this.center || [];\n        if (this.zoomFirst) {\n          k == null ? null : graph.zoom(k, this.zoomDuration);\n          x == null && y == null ? null : graph.centerAt(x, y, this.panDuration);\n        } else {\n          x == null && y == null ? null : graph.centerAt(x, y, this.panDuration);\n          k == null ? null : graph.zoom(k, this.zoomDuration);\n        }\n      }\n      this._resetting = true;\n      this.save({ zoom: null, center: null, look_at: null });\n      setTimeout(this._doneResetting, this.panDuration + this.zoomDuration);\n    }\n  }\n\n  private _doneResetting = () => {\n    this._resetting = false;\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBackboneModelOptions, WidgetModel } from '@jupyter-widgets/base';\n\nimport {\n  EUpdate,\n  IBehave,\n  IExtraColumns,\n  IRenderOptions,\n  WIDGET_DEFAULTS,\n} from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\nimport { DataFrameSourceModel } from '../sources';\n\nimport { BehaviorModel } from './base';\n\nexport class GraphDataModel extends BehaviorModel implements IBehave {\n  static model_name = 'GraphDataModel';\n  static serializers = {\n    ...WidgetModel.serializers,\n    sources: widget_serialization,\n  };\n\n  protected _sourcesToCapture = 0;\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: GraphDataModel.model_name,\n      capturing: false,\n      source_count: 1,\n      sources: [],\n    };\n  }\n\n  get sourceCount(): number {\n    return this.get('source_count');\n  }\n\n  get capturing(): boolean {\n    return this.get('capturing');\n  }\n\n  get sources(): DataFrameSourceModel[] {\n    return this.get('sources');\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:capturing', this.onCapturingChanged, this);\n    this.onCapturingChanged();\n  }\n\n  protected onCapturingChanged(e?: any): void {\n    this._sourcesToCapture = this.capturing ? this.sourceCount : 0;\n    if (this._sourcesToCapture) {\n      this._updateRequested.emit(EUpdate.Render);\n    }\n  }\n\n  getExtraColumns(behaviors: IBehave[]): IExtraColumns {\n    const nodes = [];\n    const links = [];\n    for (const behavior of behaviors) {\n      const { extraColumns } = behavior;\n      if (!extraColumns) {\n        continue;\n      }\n      nodes.push(...extraColumns.nodes);\n      links.push(...extraColumns.links);\n    }\n    return { nodes, links };\n  }\n\n  onRender(options: IRenderOptions): void {\n    const { _sourcesToCapture } = this;\n\n    if (!_sourcesToCapture) {\n      return;\n    }\n\n    const { sourceCount, sources } = this;\n\n    const index = sourceCount - _sourcesToCapture;\n\n    this._sourcesToCapture -= 1;\n\n    let source = sources[index];\n\n    source.setFromGraphData(\n      options.graphData,\n      this.getExtraColumns(options.view.model.behaviors)\n    );\n\n    if (this._sourcesToCapture) {\n      return;\n    }\n\n    for (source of sources) {\n      source.save();\n    }\n    this.set({ capturing: false });\n    this.save();\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBackboneModelOptions, WidgetModel } from '@jupyter-widgets/base';\nimport { ImageModel } from '@jupyter-widgets/controls';\n\nimport { EMOJI, EUpdate, IBehave, IRenderOptions, WIDGET_DEFAULTS } from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { BehaviorModel } from './base';\n\nexport class GraphImageModel extends BehaviorModel implements IBehave {\n  static model_name = 'GraphImageModel';\n  static serializers = {\n    ...WidgetModel.serializers,\n    frames: widget_serialization,\n  };\n\n  protected _framesToCapture = 0;\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: GraphImageModel.model_name,\n      enabled: false,\n      frame_count: 1,\n      frames: [],\n    };\n  }\n\n  get frameCount(): number {\n    return this.get('frame_count');\n  }\n\n  get capturing(): boolean {\n    return this.get('capturing');\n  }\n\n  get frames(): ImageModel[] {\n    return this.get('frames');\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:capturing', this.onCapturingChanged, this);\n    this.onCapturingChanged();\n  }\n\n  protected onCapturingChanged(e?: any): void {\n    this._framesToCapture = this.capturing ? this.frameCount : 0;\n    if (this._framesToCapture) {\n      this._updateRequested.emit(EUpdate.Render);\n    }\n  }\n\n  onRender(options: IRenderOptions): void {\n    const { _framesToCapture } = this;\n\n    if (!_framesToCapture) {\n      return;\n    }\n\n    const { frameCount } = this;\n\n    const index = frameCount - _framesToCapture;\n\n    this._framesToCapture -= 1;\n\n    const { context2d, renderer3d } = options;\n\n    let canvas: HTMLCanvasElement | null = null;\n\n    if (context2d) {\n      canvas = context2d.canvas;\n    } else if (renderer3d) {\n      canvas = renderer3d.domElement;\n    }\n\n    if (canvas == null) {\n      console.warn(`${EMOJI} couldn't handle post render of`, options);\n      return;\n    }\n\n    canvas.toBlob(this.onBlob.bind(this, index, this._framesToCapture === 0));\n  }\n\n  protected onBlob = async (\n    index: number,\n    save: boolean,\n    blob: Blob\n  ): Promise<void> => {\n    let frame = this.frames[index];\n    const value = new DataView(await blob.arrayBuffer());\n    frame.set({ value });\n    if (!save) {\n      return;\n    }\n    for (frame of this.frames) {\n      frame.save();\n    }\n    this.set({ capturing: false });\n    this.save();\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBehave, ILinkBehaveOptions } from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { FacetedModel } from './base';\n\nexport class LinkArrowModel extends FacetedModel implements IBehave {\n  static model_name = 'LinkArrowModel';\n\n  static serializers = {\n    ...FacetedModel.serializers,\n    length: widget_serialization,\n    color: widget_serialization,\n    relative_position: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof LinkArrowModel {\n    return LinkArrowModel;\n  }\n\n  getLinkDirectionalArrowColor(options: ILinkBehaveOptions): string | null {\n    return this._linkFacets.color ? this._linkFacets.color(options) : null;\n  }\n\n  getLinkDirectionalArrowLength(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.length ? this._linkFacets.length(options) : null;\n  }\n\n  getLinkDirectionalArrowRelPos(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.relative_position\n      ? this._linkFacets.relative_position(options)\n      : null;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBehave, ILinkBehaveOptions } from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { FacetedModel } from './base';\n\nexport class LinkParticleModel extends FacetedModel implements IBehave {\n  static model_name = 'LinkParticleModel';\n\n  static serializers = {\n    ...FacetedModel.serializers,\n    color: widget_serialization,\n    density: widget_serialization,\n    speed: widget_serialization,\n    width: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof LinkParticleModel {\n    return LinkParticleModel;\n  }\n\n  getLinkDirectionalParticleColor(options: ILinkBehaveOptions): string | null {\n    return this._linkFacets.color ? this._linkFacets.color(options) : null;\n  }\n\n  getLinkDirectionalParticleSpeed(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.speed ? this._linkFacets.speed(options) : null;\n  }\n\n  getLinkDirectionalParticles(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.density ? this._linkFacets.density(options) : null;\n  }\n\n  getLinkDirectionalParticleWidth(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.width ? this._linkFacets.width(options) : null;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { GraphData } from 'force-graph';\n\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport {\n  DEFAULT_COLORS,\n  DEFAULT_CURVATURES,\n  DEFAULT_LINE_DASHES,\n  DEFAULT_WIDTHS,\n  EUpdate,\n  IBehave,\n  IExtraColumns,\n  ILinkBehaveOptions,\n  ILinkEventBehaveOptions,\n  TSelectedSet,\n  WIDGET_DEFAULTS,\n} from '../../tokens';\n\nimport { BehaviorModel } from './base';\n\nexport class LinkSelectionModel extends BehaviorModel implements IBehave {\n  static model_name = 'LinkSelectionModel';\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: LinkSelectionModel.model_name,\n      selected: [],\n      selected_color: DEFAULT_COLORS.selected,\n      selected_curvature: DEFAULT_CURVATURES.selected,\n      selected_line_dash: DEFAULT_LINE_DASHES.selected,\n      selected_width: DEFAULT_WIDTHS.selected,\n      multiple: true,\n    };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:selected change:column_name', this.onValueChange, this);\n    this.onValueChange();\n  }\n\n  get extraColumns(): IExtraColumns {\n    return { links: this.columnName ? [this.columnName] : [], nodes: [] };\n  }\n\n  onValueChange(change?: any) {\n    this._updateRequested.emit(EUpdate.Render);\n    if (this.columnName) {\n      this._graphDataUpdateRequested.emit(void 0);\n    }\n  }\n\n  async updateGraphData(graphData: GraphData): Promise<void> {\n    const { selected, columnName } = this;\n    if (!columnName) {\n      return;\n    }\n    const { links } = graphData;\n    const linkCount = links.length;\n    for (let i = 0; i < linkCount; i++) {\n      links[i][columnName] = selected.has(i);\n    }\n  }\n\n  get selected(): TSelectedSet {\n    return new Set([...(this.get('selected') || [])]);\n  }\n\n  set selected(selected: TSelectedSet) {\n    this.set({ selected: [...selected] });\n    this.save_changes();\n  }\n\n  get selectedColor(): string {\n    return this.get('selected_color') || DEFAULT_COLORS.selected;\n  }\n\n  get selectedCurvature(): string {\n    return this.get('selected_curvature') || DEFAULT_CURVATURES.selected;\n  }\n\n  get selectedLineDash(): string {\n    return this.get('selected_line_dash') || DEFAULT_LINE_DASHES.selected;\n  }\n\n  get selectedWidth(): string {\n    return this.get('selected_width') || DEFAULT_WIDTHS.selected;\n  }\n\n  get columnName(): string | null {\n    return this.get('column_name') || null;\n  }\n\n  get multiple(): boolean {\n    return this.get('multiple');\n  }\n\n  getLinkColor({ index }: ILinkBehaveOptions): string | null {\n    const color = this.selected.has(index) ? this.selectedColor : null;\n    return color;\n  }\n\n  getLinkCurvature({ index }: ILinkBehaveOptions): number | null {\n    const curvature = this.selected.has(index) ? this.selectedCurvature : null;\n    if (curvature != null) {\n      return parseFloat(curvature);\n    }\n    return null;\n  }\n\n  getLinkLineDash({ index }: ILinkBehaveOptions): number[] | null {\n    const line_dash = this.selected.has(index) ? this.selectedLineDash : null;\n    if (line_dash != null) {\n      if (typeof line_dash === 'string') {\n        return JSON.parse(line_dash);\n      }\n      return line_dash;\n    }\n    return null;\n  }\n\n  getLinkWidth({ index }: ILinkBehaveOptions): number | null {\n    const width = this.selected.has(index) ? this.selectedWidth : null;\n    if (width != null) {\n      return parseFloat(width);\n    }\n    return null;\n  }\n\n  onLinkClick = ({\n    link,\n    index,\n    event,\n    graphData,\n  }: ILinkEventBehaveOptions): boolean => {\n    let { selected, columnName, multiple } = this;\n    const indexWasSelected = selected.has(index);\n    if (multiple && (event.ctrlKey || event.shiftKey || event.altKey)) {\n      indexWasSelected ? selected.delete(index) : selected.add(index);\n    } else {\n      if (columnName) {\n        for (const oldIndex of selected) {\n          const oldLink = graphData.links[oldIndex];\n          oldLink && (oldLink[columnName] = false);\n        }\n      }\n      selected.clear();\n      !indexWasSelected && selected.add(index);\n    }\n\n    if (columnName) {\n      link[columnName] = !indexWasSelected;\n    }\n\n    this.selected = selected;\n\n    return true;\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport {\n  EUpdate,\n  IBehave,\n  ILinkBehaveOptions,\n  ILinkCanvasBehaveOptions,\n  ILinkThreeBehaveOptions,\n  emptyArray,\n} from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { BehaviorModel, FacetedModel } from './base';\nimport { ShapeBaseModel } from './shapes/base';\n\nexport class LinkShapeFacetsModel extends FacetedModel implements IBehave {\n  static model_name = 'NodeShapeFacetsModel';\n  static serializers = {\n    ...BehaviorModel.serializers,\n    color: widget_serialization,\n    curvature: widget_serialization,\n    line_dash: widget_serialization,\n    width: widget_serialization,\n  };\n\n  get _facetClass(): typeof LinkShapeFacetsModel {\n    return LinkShapeFacetsModel;\n  }\n\n  getLinkColor(options: ILinkBehaveOptions): string | null {\n    return this._linkFacets.color ? this._linkFacets.color(options) : null;\n  }\n\n  getLinkCurvature(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.curvature ? this._linkFacets.curvature(options) : null;\n  }\n\n  getLinkLineDash(options: ILinkBehaveOptions): number[] | null {\n    return this._linkFacets.line_dash ? this._linkFacets.line_dash(options) : null;\n  }\n\n  getLinkWidth(options: ILinkBehaveOptions): number | null {\n    return this._linkFacets.width ? this._linkFacets.width(options) : null;\n  }\n}\n\nexport class LinkShapeModel extends LinkShapeFacetsModel implements IBehave {\n  static model_name = 'LinkShapeModel';\n\n  static serializers = {\n    ...LinkShapeFacetsModel.serializers,\n    shapes: widget_serialization,\n  };\n\n  defaults() {\n    return { ...super.defaults(), _model_name: LinkShapeModel.model_name, shapes: [] };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:shapes', this.onShapesChanged, this);\n    void this.onShapesChanged.call(this);\n  }\n\n  async onShapesChanged() {\n    for (const shape of this.shapes) {\n      await shape.ensureFacets();\n      shape.updateRequested.connect(this.onShapesChanged, this);\n    }\n\n    const anyThis = this as any;\n\n    if (this.shapes.length && !anyThis.getLinkCanvasObject) {\n      anyThis.getLinkCanvasObject = this._getLinkCanvasObject;\n      anyThis.getLinkThreeObject = this._getLinkThreeObject;\n      anyThis.getLinkPosition = this._getLinkPosition;\n      this._updateRequested.emit(EUpdate.Behavior);\n    } else if (!this.shapes.length && anyThis.getLinkCanvasObject) {\n      delete anyThis.getLinkCanvasObject;\n      delete anyThis.getLinkThreeObject;\n      this._updateRequested.emit(EUpdate.Behavior);\n    } else {\n      this._updateRequested.emit(void 0);\n    }\n  }\n\n  get shapes(): ShapeBaseModel[] {\n    return this.get('shapes') || emptyArray;\n  }\n\n  protected get _modelClass(): typeof LinkShapeModel {\n    return LinkShapeModel;\n  }\n\n  _getLinkCanvasObject(options: ILinkCanvasBehaveOptions): void {\n    for (const shape of this.shapes) {\n      shape.drawLink2D(options);\n    }\n  }\n\n  _getLinkThreeObject(options: ILinkThreeBehaveOptions): THREE.Object3D | null {\n    for (const shape of this.shapes) {\n      const obj = shape.drawLink3D(options);\n      if (obj) {\n        return obj;\n      }\n    }\n  }\n\n  _getLinkPosition(options: ILinkThreeBehaveOptions): void {\n    for (const shape of this.shapes) {\n      shape.positionLink3D(options);\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBehave, ILinkBehaveOptions } from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { FacetedModel } from './base';\n\nexport class LinkTooltipModel extends FacetedModel implements IBehave {\n  static model_name = 'LinkTooltipModel';\n\n  static serializers = {\n    ...FacetedModel.serializers,\n    label: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof LinkTooltipModel {\n    return LinkTooltipModel;\n  }\n\n  getLinkLabel(options: ILinkBehaveOptions): string | null {\n    return this._linkFacets.label ? this._linkFacets.label(options) : null;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { GraphData } from 'force-graph';\n\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport {\n  DEFAULT_COLORS,\n  EUpdate,\n  IBehave,\n  IExtraColumns,\n  INodeBehaveOptions,\n  INodeEventBehaveOptions,\n  TSelectedSet,\n  WIDGET_DEFAULTS,\n} from '../../tokens';\n\nimport { BehaviorModel } from './base';\n\nexport class NodeSelectionModel extends BehaviorModel implements IBehave {\n  static model_name = 'NodeSelectionModel';\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: NodeSelectionModel.model_name,\n      selected: [],\n      selected_color: DEFAULT_COLORS.selected,\n      multiple: true,\n    };\n  }\n\n  get extraColumns(): IExtraColumns {\n    return { links: [], nodes: this.columnName ? [this.columnName] : [] };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:selected change:column_name', this.onValueChange, this);\n    this.onValueChange();\n  }\n\n  onValueChange(change?: any) {\n    this._updateRequested.emit(EUpdate.Render);\n    if (this.columnName) {\n      this._graphDataUpdateRequested.emit(void 0);\n    }\n  }\n\n  async updateGraphData(graphData: GraphData): Promise<void> {\n    const { selected, columnName } = this;\n    if (!columnName) {\n      return;\n    }\n    const { nodes } = graphData;\n    const nodeCount = nodes.length;\n    for (let i = 0; i < nodeCount; i++) {\n      nodes[i][columnName] = selected.has(i);\n    }\n  }\n\n  get selected(): TSelectedSet {\n    return new Set([...(this.get('selected') || [])]);\n  }\n\n  set selected(selected: TSelectedSet) {\n    this.set({ selected: [...selected] });\n    this.save_changes();\n  }\n\n  get selectedColor(): string {\n    return this.get('selected_color') || DEFAULT_COLORS.selected;\n  }\n\n  get columnName(): string | null {\n    return this.get('column_name') || null;\n  }\n\n  get multiple(): boolean {\n    return this.get('multiple');\n  }\n\n  getNodeColor({ node }: INodeBehaveOptions): string | null {\n    const index = (node as any).index;\n    const color = index != null && this.selected.has(index) ? this.selectedColor : null;\n    return color;\n  }\n\n  onNodeClick = ({\n    node,\n    index,\n    event,\n    graphData,\n  }: INodeEventBehaveOptions): boolean => {\n    let { selected, multiple, columnName } = this;\n    const indexWasSelected = selected.has(index);\n\n    if (multiple && (event.ctrlKey || event.shiftKey || event.altKey)) {\n      indexWasSelected ? selected.delete(index) : selected.add(index);\n    } else {\n      if (columnName) {\n        for (const oldIndex of selected) {\n          const oldNode = graphData.nodes[oldIndex];\n          oldNode && (oldNode[columnName] = false);\n        }\n      }\n      selected.clear();\n      !indexWasSelected && selected.add(index);\n    }\n\n    if (columnName) {\n      node[columnName] = !indexWasSelected;\n    }\n\n    this.selected = selected;\n\n    return true;\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type THREE from 'three';\n\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport {\n  EUpdate,\n  IBehave,\n  INodeBehaveOptions,\n  INodeCanvasBehaveOptions,\n  INodeThreeBehaveOptions,\n  emptyArray,\n} from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { BehaviorModel, FacetedModel } from './base';\nimport type { ShapeBaseModel } from './shapes/base';\n\nexport class NodeShapeFacetsModel extends FacetedModel implements IBehave {\n  static model_name = 'NodeShapeFacetsModel';\n  static serializers = {\n    ...BehaviorModel.serializers,\n    size: widget_serialization,\n    color: widget_serialization,\n  };\n\n  get _facetClass(): typeof NodeShapeFacetsModel {\n    return NodeShapeFacetsModel;\n  }\n\n  getNodeSize(options: INodeBehaveOptions): number | null {\n    return this._nodeFacets.size ? this._nodeFacets.size(options) : null;\n  }\n\n  getNodeColor(options: INodeBehaveOptions): string | null {\n    return this._nodeFacets.color ? this._nodeFacets.color(options) : null;\n  }\n}\n\nexport class NodeShapeModel extends NodeShapeFacetsModel implements IBehave {\n  static model_name = 'NodeShapeModel';\n  static serializers = {\n    ...NodeShapeFacetsModel.serializers,\n    shapes: widget_serialization,\n  };\n\n  defaults() {\n    return { ...super.defaults(), _model_name: NodeShapeModel.model_name, shapes: [] };\n  }\n\n  get _modelClass(): typeof NodeShapeModel {\n    return NodeShapeModel;\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:shapes', this.onShapesChanged, this);\n    void this.onShapesChanged.call(this);\n  }\n\n  async onShapesChanged() {\n    for (const shape of this.shapes) {\n      await shape.ensureFacets();\n      shape.updateRequested.connect(this.onShapesChanged, this);\n    }\n\n    const anyThis = this as any;\n\n    if (this.shapes.length && !anyThis.getNodeCanvasObject) {\n      anyThis.getNodeCanvasObject = this._getNodeCanvasObject;\n      anyThis.getNodeThreeObject = this._getNodeThreeObject;\n      this._updateRequested.emit(EUpdate.Behavior);\n    } else if (!this.shapes.length && anyThis.getNodeCanvasObject) {\n      delete anyThis.getNodeCanvasObject;\n      delete anyThis.getNodeThreeObject;\n      this._updateRequested.emit(EUpdate.Behavior);\n    } else {\n      this._updateRequested.emit(void 0);\n    }\n  }\n\n  get shapes(): ShapeBaseModel[] {\n    return this.get('shapes') || emptyArray;\n  }\n\n  _getNodeCanvasObject(options: INodeCanvasBehaveOptions): void {\n    for (const shape of this.shapes) {\n      shape.drawNode2D(options);\n    }\n  }\n\n  _getNodeThreeObject(options: INodeThreeBehaveOptions): THREE.Object3D | null {\n    for (const shape of this.shapes) {\n      const obj = shape.drawNode3D(options);\n      if (obj) {\n        return obj;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBehave, INodeBehaveOptions } from '../../tokens';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { FacetedModel } from './base';\n\nexport class NodeTooltipModel extends FacetedModel implements IBehave {\n  static model_name = 'NodeTooltipModel';\n\n  static serializers = {\n    ...FacetedModel.serializers,\n    label: widget_serialization,\n  };\n\n  protected get _modelClass(): typeof NodeTooltipModel {\n    return NodeTooltipModel;\n  }\n\n  getNodeLabel(options: INodeBehaveOptions): string | null {\n    return this._nodeFacets.label ? this._nodeFacets.label(options) : null;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport { TCoercer } from '../../tokens';\nimport { noop } from '../../utils';\n\nimport { ColumnModel } from './base';\n\nconst noopHanlders = [noop, noop];\n\nexport class ContinuousColorModel extends ColumnModel {\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:scheme change:domain', this.valueChanged, this);\n  }\n\n  async _buildHandlers(value: any, coercer: TCoercer): Promise<Function[]> {\n    let { scheme, domain } = this;\n\n    const min = domain[0];\n    const max = domain.slice(-1)[0];\n\n    const d3sc = await import('d3-scale-chromatic');\n    const interpolate = d3sc[`interpolate${scheme}`];\n\n    if (!interpolate) {\n      console.warn(`${scheme} cannot be interpolated`);\n      return noopHanlders;\n    }\n\n    const base = max - min;\n\n    function _nodeHandler(options: any) {\n      const v = coercer(options.node ? options.node[value] : null);\n      return v == null ? v : interpolate((v - min) / base);\n    }\n\n    function _linkHandler(options: any) {\n      const v = coercer(options.link ? options.link[value] : null);\n      return v == null ? v : interpolate((v - min) / base);\n    }\n\n    return [_nodeHandler, _linkHandler];\n  }\n\n  get scheme(): string {\n    return this.get('scheme');\n  }\n\n  get domain(): number[] {\n    return this.get('domain') || [0, 1];\n  }\n}\n\nexport class OrdinalColorModel extends ColumnModel {\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on(\n      'change:scheme change:domain change:range change:sub_scheme',\n      this.valueChanged,\n      this\n    );\n  }\n\n  async _buildHandlers(value: any, coercer: TCoercer): Promise<Function[]> {\n    let { scheme, range, domain } = this;\n    const [d3sc, d3s] = await Promise.all([\n      import('d3-scale-chromatic'),\n      import('d3-scale'),\n    ]);\n\n    if (scheme) {\n      const schemeRange = d3sc[`scheme${scheme}`];\n      if (schemeRange) {\n        range = schemeRange;\n      }\n    }\n\n    const scale = d3s.scaleOrdinal(range).domain(domain);\n\n    function _nodeHandler(options: any) {\n      const v = coercer(options.node ? options.node[value] : null);\n      return v == null ? v : scale(v);\n    }\n\n    function _linkHandler(options: any) {\n      const v = coercer(options.link ? options.link[value] : null);\n      return v == null ? v : scale(v);\n    }\n\n    return [_nodeHandler, _linkHandler];\n  }\n\n  get scheme(): string {\n    return this.get('scheme');\n  }\n\n  get domain(): any[] {\n    return this.get('domain') || [0, 1];\n  }\n\n  get range(): string[] {\n    return this.get('range') || [];\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { LinkObject } from 'force-graph/dist/force-graph';\nimport type THREE from 'three';\n\nimport {\n  EMOJI,\n  EMark,\n  ILinkCanvasBehaveOptions,\n  ILinkThreeBehaveOptions,\n  INodeCanvasBehaveOptions,\n  INodeThreeBehaveOptions,\n} from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\nimport { FacetedModel } from '../base';\n\nexport interface IBaseOptions {\n  iframeClasses?: Record<string, any>;\n}\n\nexport interface INodeOptions extends IBaseOptions {\n  x: number;\n  y: number;\n  globalScale: number;\n}\n\nexport interface ILinkOptions extends IBaseOptions {\n  link: LinkObject;\n}\n\nexport interface ILinkCanvasOptions extends ILinkOptions {\n  context: CanvasRenderingContext2D;\n}\n\nexport interface INodeCanvasOptions extends INodeOptions {\n  context: CanvasRenderingContext2D;\n}\n\nexport type TBoundingBox = number[];\n\nexport const black = 'rgba(0,0,0,1)';\nexport const transparent = 'rgba(0,0,0,0)';\nexport const FULL_CIRCLE = Math.PI * 2;\n\n// mixins\n\nexport interface IScaleOptions {\n  scale_on_zoom?: boolean;\n}\n\nexport interface IFillAndStrokeOptions extends IScaleOptions {\n  fill?: string;\n  stroke_width?: number;\n  stroke?: string;\n  line_dash?: number[];\n}\n\nexport interface IDimensionOptions extends IFillAndStrokeOptions {\n  width?: number;\n  height?: number;\n  depth?: number;\n  opacity?: number;\n  offset_x?: number;\n  offset_y?: number;\n  offset_z?: number;\n}\n\n// options for specific shapes\n\nexport interface IEllipseOptions extends IDimensionOptions {\n  // no additional options\n}\n\nexport interface ITextOptions extends IFillAndStrokeOptions {\n  text: string;\n  size?: number;\n  size_pixels?: number;\n  font?: string;\n  background?: string;\n  padding?: number;\n  offset_x?: number;\n  offset_y?: number;\n  offset_z?: number;\n}\n\nexport interface IRectangleOptions extends IDimensionOptions {\n  // no additional options\n}\n\n// defaults\n\nexport const ELLIPSE_DEFAULTS: IEllipseOptions = Object.freeze({\n  width: 12,\n  height: 12,\n  depth: 12,\n  opacity: 0.75,\n  fill: transparent,\n  scale_on_zoom: false,\n  stroke: transparent,\n  stroke_width: 2,\n  offset_x: 0,\n  offset_y: 0,\n  offset_z: 0,\n});\n\nexport const RECTANGLE_DEFAULTS: IRectangleOptions = Object.freeze({\n  width: 12,\n  height: 12,\n  depth: 12,\n  opacity: 0.75,\n  fill: transparent,\n  scale_on_zoom: false,\n  stroke: transparent,\n  stroke_width: 2,\n  offset_x: 0,\n  offset_y: 0,\n  offset_z: 0,\n});\n\nexport const TEXT_DEFAULTS: ITextOptions = Object.freeze({\n  size: 12,\n  fill: black,\n  font: 'sans-serif',\n  padding: 0.2,\n  text: '',\n  scale_on_zoom: true,\n  stroke_width: 2,\n  offset_x: 0,\n  offset_y: 0,\n  offset_z: 0,\n});\n\nexport class ShapeBaseModel extends FacetedModel {\n  /** Required in subclass. The model name should be unique between shapes.  */\n  static model_name = 'ShapeBaseModel';\n\n  /** Required in subclass. Draw a node shape on a canvas. */\n  drawNode2D(options: INodeCanvasBehaveOptions): void {\n    return;\n  }\n\n  /** Required in subclass. Draw a node shape in Three.js. */\n  drawNode3D(options: INodeThreeBehaveOptions): THREE.Object3D | null {\n    return;\n  }\n\n  /** Required in subclass. Draw a link shape on a canvas. */\n  drawLink2D(options: ILinkCanvasBehaveOptions): void {\n    return;\n  }\n\n  /** Required in subclass. Draw a link shape in Three.js. */\n  drawLink3D(options: ILinkThreeBehaveOptions): THREE.Object3D | null {\n    return;\n  }\n\n  /** Required in subclass. Position a link shape in Three.js. */\n  positionLink3D(options: ILinkThreeBehaveOptions): void {\n    return;\n  }\n\n  /** Evaluate all facets with the runtime shape into the \"dumb\" data for drawing. */\n  protected _resolveFacets(\n    options:\n      | INodeCanvasBehaveOptions\n      | INodeThreeBehaveOptions\n      | ILinkCanvasBehaveOptions\n      | ILinkThreeBehaveOptions,\n    markType: EMark\n  ): Record<string, any> {\n    const draw: Record<string, any> = {};\n    const facets = markType == 'link' ? this._linkFacets : this._nodeFacets;\n    for (const facetName of this._facetNames) {\n      if (facets[facetName]) {\n        try {\n          draw[facetName] = facets[facetName](options);\n        } catch (err) {\n          console.warn(`${EMOJI} encountered error for ${facetName}`, options, err);\n        }\n      }\n    }\n    return draw;\n  }\n}\n\nexport class GeometryShapeModel extends ShapeBaseModel {\n  /**\n   * All sublcasses of this use the same serializers.\n   */\n  protected get _facetClass(): typeof GeometryShapeModel {\n    return GeometryShapeModel;\n  }\n\n  static serializers = {\n    ...ShapeBaseModel.serializers,\n    width: widget_serialization,\n    height: widget_serialization,\n    depth: widget_serialization,\n    fill: widget_serialization,\n    opacity: widget_serialization,\n    stroke: widget_serialization,\n    stroke_width: widget_serialization,\n    scale_on_zoom: widget_serialization,\n    line_dash: widget_serialization,\n    offset_x: widget_serialization,\n    offset_y: widget_serialization,\n    offset_z: widget_serialization,\n  };\n\n  protected get shapeDefaults(): IDimensionOptions {\n    throw new Error(`${EMOJI} missing shape defaults for ${this._modelClass}`);\n  }\n\n  drawNode2D(options: INodeCanvasBehaveOptions): void {\n    const { context, node, globalScale } = options;\n    const { x, y } = node;\n\n    const drawOptions = {\n      ...this.shapeDefaults,\n      context,\n      globalScale,\n      x,\n      y,\n      ...this._resolveFacets(options, EMark.node),\n    };\n\n    if (!drawOptions.width) {\n      return;\n    }\n\n    this._drawCanvas(drawOptions);\n  }\n\n  drawNode3D(options: INodeThreeBehaveOptions): THREE.Object3D | null {\n    const { node, iframeClasses } = options;\n    const { x, y } = node;\n\n    const drawOptions = {\n      ...this.shapeDefaults,\n      context: null,\n      globalScale: null,\n      x,\n      y,\n      iframeClasses,\n      ...this._resolveFacets(options, EMark.node),\n    };\n\n    if (!drawOptions.width) {\n      return null;\n    }\n\n    return this._drawThree(drawOptions);\n  }\n\n  protected _drawCanvasPath(options: IDimensionOptions & INodeCanvasOptions): void {\n    throw new Error(`${EMOJI} does not draw canvas ${this._modelClass}`);\n  }\n\n  protected _drawCanvas(options: IDimensionOptions & INodeCanvasOptions): void {\n    const { context, globalScale, fill, scale_on_zoom, stroke_width, opacity, stroke } =\n      {\n        ...RECTANGLE_DEFAULTS,\n        ...options,\n      };\n\n    context.globalAlpha = opacity;\n\n    context.fillStyle = fill;\n    context.strokeStyle = stroke;\n    context.lineWidth = scale_on_zoom ? stroke_width / globalScale : stroke_width;\n\n    context.setLineDash(options.line_dash || []);\n\n    context.beginPath();\n\n    this._drawCanvasPath(options);\n\n    context.fill();\n    context.stroke();\n  }\n\n  protected _drawThreeGeometry(\n    options: IDimensionOptions & INodeOptions\n  ): THREE.BufferGeometry {\n    throw new Error(`${EMOJI} doesn't implement 3d geometry ${this._modelClass}`);\n  }\n\n  protected _drawThree(options: IDimensionOptions & INodeOptions): THREE.Object3D {\n    const { fill, iframeClasses, opacity } = {\n      ...RECTANGLE_DEFAULTS,\n      ...options,\n    };\n\n    const _THREE: typeof THREE = iframeClasses.THREE;\n\n    const geometry = this._drawThreeGeometry(options);\n\n    const material = new _THREE.MeshLambertMaterial({\n      color: fill,\n      transparent: true,\n      opacity,\n    });\n    const sphere = new _THREE.Mesh(geometry, material);\n\n    return sphere;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n *\n * Derived from:\n * https://github.com/vasturiano/force-graph/blob/master/example/text-links/index.html\n */\nimport type THREE from 'three';\nimport type SpriteText from 'three-spritetext';\n\nimport {\n  EMark,\n  ILinkCanvasBehaveOptions,\n  ILinkThreeBehaveOptions,\n  INodeCanvasBehaveOptions,\n  INodeThreeBehaveOptions,\n  IThreeLinkPosition,\n} from '../../../tokens';\nimport { widget_serialization } from '../../serializers/widget';\n\nimport {\n  ILinkCanvasOptions,\n  ILinkOptions,\n  INodeCanvasOptions,\n  INodeOptions,\n  ITextOptions,\n  ShapeBaseModel,\n  TEXT_DEFAULTS,\n} from './base';\n\nconst ELLIPSIS = ' …';\n\nexport class TextShapeModel extends ShapeBaseModel {\n  static model_name = 'TextShapeModel';\n\n  protected get _modelClass(): typeof TextShapeModel {\n    return TextShapeModel;\n  }\n\n  static serializers = {\n    ...ShapeBaseModel.serializers,\n    text: widget_serialization,\n    font: widget_serialization,\n    size: widget_serialization,\n    fill: widget_serialization,\n    stroke: widget_serialization,\n    stroke_width: widget_serialization,\n    background: widget_serialization,\n    padding: widget_serialization,\n    scale_on_zoom: widget_serialization,\n    line_dash: widget_serialization,\n    offset_x: widget_serialization,\n    offset_y: widget_serialization,\n    offset_z: widget_serialization,\n  };\n\n  drawNode2D(options: INodeCanvasBehaveOptions): void {\n    const { context, node, globalScale } = options;\n    const { x, y } = node;\n\n    const drawOptions = {\n      ...TEXT_DEFAULTS,\n      context,\n      globalScale,\n      x,\n      y,\n      ...this._resolveFacets(options, EMark.node),\n    };\n\n    if (drawOptions.text == null || !`${drawOptions.text}`.trim().length) {\n      return;\n    }\n\n    this._drawCanvasNode(drawOptions);\n  }\n\n  drawNode3D(options: INodeThreeBehaveOptions): SpriteText | null {\n    const { node, iframeClasses } = options;\n    const { x, y } = node;\n\n    const drawOptions = {\n      ...TEXT_DEFAULTS,\n      context: null,\n      globalScale: null,\n      x,\n      y,\n      iframeClasses,\n      ...this._resolveFacets(options, EMark.node),\n    };\n\n    if (!drawOptions.text) {\n      return null;\n    }\n\n    return this._drawThreeText(drawOptions);\n  }\n\n  drawLink3D(options: ILinkThreeBehaveOptions): THREE.Object3D | null {\n    const { link, iframeClasses } = options;\n\n    const drawOptions = {\n      ...TEXT_DEFAULTS,\n      link,\n      iframeClasses,\n      ...this._resolveFacets(options, EMark.link),\n    };\n\n    if (!drawOptions.text) {\n      return null;\n    }\n\n    return this._drawThreeText(drawOptions);\n  }\n\n  positionLink3D(options: ILinkThreeBehaveOptions): void {\n    const { link, position, sprite } = options;\n\n    if (!sprite || !position) {\n      return;\n    }\n\n    const drawOptions = {\n      ...TEXT_DEFAULTS,\n      link,\n      ...this._resolveFacets(options, EMark.link),\n    };\n\n    if (!drawOptions.text) {\n      return null;\n    }\n\n    this._positionThreeLink(sprite, position, drawOptions);\n  }\n\n  drawLink2D(options: ILinkCanvasBehaveOptions): void {\n    const { context, link } = options;\n\n    const drawOptions = {\n      ...TEXT_DEFAULTS,\n      context,\n      link,\n      ...this._resolveFacets(options, EMark.link),\n    };\n\n    if (drawOptions.text == null || !`${drawOptions.text}`.trim().length) {\n      return;\n    }\n\n    this._drawCanvasLink(drawOptions);\n  }\n\n  protected _positionThreeLink(\n    sprite: THREE.Object3D,\n    position: IThreeLinkPosition,\n    options: ITextOptions & ILinkOptions\n  ): void {\n    const { offset_x, offset_y, offset_z } = {\n      ...TEXT_DEFAULTS,\n      ...options,\n    };\n    const { start, end } = position;\n    Object.assign(sprite.position, {\n      x: start.x + (end.x - start.x) / 2 + offset_x,\n      y: start.y + (end.y - start.y) / 2 + offset_y,\n      z: start.z + (end.z - start.z) / 2 + offset_z,\n    });\n  }\n\n  protected _drawThreeText(\n    options: ITextOptions & (INodeOptions | ILinkOptions)\n  ): SpriteText {\n    const {\n      text,\n      fill,\n      font,\n      size,\n      stroke,\n      stroke_width,\n      background,\n      padding,\n      iframeClasses,\n    } = {\n      ...TEXT_DEFAULTS,\n      ...options,\n    };\n\n    const _SpriteText: typeof SpriteText = iframeClasses.SpriteText;\n\n    const sprite = new _SpriteText(text);\n\n    sprite.material.depthWrite = false;\n    sprite.textHeight = size;\n    sprite.color = fill;\n    sprite.fontFace = font;\n\n    if (options.size_pixels) {\n      sprite.fontSize = options.size_pixels;\n    }\n\n    if (stroke) {\n      sprite.strokeColor = stroke;\n      sprite.strokeWidth = stroke_width;\n    }\n\n    if (background) {\n      sprite.backgroundColor = background;\n      sprite.padding = padding;\n    }\n\n    return sprite;\n  }\n\n  protected _drawCanvasNode(options: ITextOptions & INodeCanvasOptions): void {\n    let {\n      context,\n      text,\n      size,\n      globalScale,\n      font,\n      padding,\n      background,\n      x,\n      y,\n      scale_on_zoom,\n      offset_x,\n      offset_y,\n    } = {\n      ...TEXT_DEFAULTS,\n      ...options,\n    };\n    x = offset_x ? x + offset_x : x;\n    y = offset_y ? y + offset_y : y;\n    const fontSize = scale_on_zoom ? size / globalScale : size;\n    context.font = `${fontSize}px ${font}`;\n\n    if (background) {\n      const textWidth = context.measureText(text).width;\n      const bb = [textWidth + fontSize * padding, fontSize + fontSize * padding];\n      context.fillStyle = background;\n      context.fillRect(x - bb[0] / 2, y - bb[1] / 2, bb[0], bb[1]);\n    }\n\n    this._drawCanvasText(text, x, y, options);\n  }\n\n  protected _drawCanvasLink(options: ITextOptions & ILinkCanvasOptions): void {\n    const { background, context, font, link, padding, size, offset_x, offset_y } =\n      options;\n\n    if (typeof link.source !== 'object' || typeof link.target !== 'object') {\n      return;\n    }\n\n    context.font = `${size}px ${font}`;\n\n    const [x, y, textAngle, linkWidth] = this._getTextTransforms(options);\n\n    const [label, textWidth] = this._getTruncatedCanvasText(linkWidth, options);\n\n    context.save();\n    context.translate(x, y);\n    context.rotate(textAngle);\n\n    if (background) {\n      const bb = [textWidth + size * padding, size + size * padding];\n      context.fillStyle = background;\n      context.fillRect(offset_x - bb[0] / 2, offset_y - bb[1] / 2, bb[0], bb[1]);\n    }\n\n    this._drawCanvasText(label, offset_x, offset_y, options);\n\n    context.restore();\n  }\n\n  _getTextTransforms(\n    options: ITextOptions & ILinkCanvasOptions\n  ): [number, number, number, number] {\n    const { link } = options;\n    const { source, target } = link;\n\n    // ignore unbound links\n    if (typeof source !== 'object' || typeof target !== 'object') {\n      return;\n    }\n\n    // calculate label positioning\n    const x = source.x + (target.x - source.x) / 2;\n    const y = source.y + (target.y - source.y) / 2;\n\n    const relLink = { x: target.x - source.x, y: target.y - source.y };\n    const linkWidth = Math.sqrt(relLink.x * relLink.x + relLink.y * relLink.y);\n\n    // maintain label vertical orientation for legibility\n    let textAngle = Math.atan2(relLink.y, relLink.x);\n    if (textAngle > Math.PI / 2) {\n      textAngle = -(Math.PI - textAngle);\n    }\n\n    if (textAngle < -Math.PI / 2) {\n      textAngle = -(-Math.PI - textAngle);\n    }\n    return [x, y, textAngle, linkWidth];\n  }\n\n  _getTruncatedCanvasText(\n    linkWidth: number,\n    options: ITextOptions & ILinkCanvasOptions\n  ): [string, number] {\n    const { text, context, size } = options;\n    let label = text;\n    let textWidth = context.measureText(text).width;\n    let extraPad = 3 * size;\n\n    if (textWidth + extraPad > linkWidth) {\n      while (label.length && textWidth + extraPad > linkWidth) {\n        label = label.slice(0, -1).trim();\n        textWidth = context.measureText(`${label}${ELLIPSIS}`.trim()).width;\n      }\n      label = `${label}${ELLIPSIS}`.trim();\n    }\n\n    return [label, textWidth];\n  }\n\n  _drawCanvasText(\n    text: string,\n    x: number,\n    y: number,\n    options: ITextOptions & (ILinkCanvasOptions | INodeCanvasOptions)\n  ) {\n    const { line_dash, context, stroke, stroke_width, fill } = options;\n\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    if (stroke) {\n      context.setLineDash(line_dash || []);\n      context.strokeStyle = stroke;\n      context.lineWidth = stroke_width;\n      context.lineJoin = 'round';\n      context.strokeText(text, x, y);\n    }\n\n    context.fillStyle = fill;\n    context.fillText(text, x, y);\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type THREE from 'three';\n\nimport { GeometryShapeModel, INodeCanvasOptions } from './base';\nimport { ELLIPSE_DEFAULTS, FULL_CIRCLE, IEllipseOptions, INodeOptions } from './base';\n\nexport class EllipseShapeModel extends GeometryShapeModel {\n  static model_name = 'EllipseShapeModel';\n\n  protected get _modelClass() {\n    return EllipseShapeModel;\n  }\n\n  protected get shapeDefaults() {\n    return ELLIPSE_DEFAULTS;\n  }\n\n  protected _drawCanvasPath(options: IEllipseOptions & INodeCanvasOptions): void {\n    const {\n      width,\n      height,\n      context,\n      x,\n      y,\n      scale_on_zoom,\n      globalScale,\n      offset_x,\n      offset_y,\n    } = options;\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    context.ellipse(\n      x + offset_x,\n      y + offset_y,\n      scale_on_zoom ? radiusX / globalScale : radiusX,\n      scale_on_zoom ? radiusY / globalScale : radiusY,\n      0,\n      0,\n      FULL_CIRCLE\n    );\n  }\n\n  protected _drawThreeGeometry(\n    options: IEllipseOptions & INodeOptions\n  ): THREE.BufferGeometry {\n    const { height, width, depth, scale_on_zoom, globalScale } = options;\n    const _THREE: typeof THREE = options.iframeClasses.THREE;\n    const geometry = new _THREE.SphereGeometry(\n      scale_on_zoom ? width / globalScale : width\n    );\n    geometry.applyMatrix4(\n      new _THREE.Matrix4().makeScale(1.0, height / width, depth / width)\n    );\n    return geometry;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type THREE from 'three';\n\nimport { GeometryShapeModel, INodeCanvasOptions } from './base';\nimport { INodeOptions, IRectangleOptions, RECTANGLE_DEFAULTS } from './base';\n\nexport class RectangleShapeModel extends GeometryShapeModel {\n  static model_name = 'RectangleShapeModel';\n\n  protected get _modelClass() {\n    return RectangleShapeModel;\n  }\n\n  protected get shapeDefaults() {\n    return RECTANGLE_DEFAULTS;\n  }\n\n  protected _drawCanvasPath(options: IRectangleOptions & INodeCanvasOptions): void {\n    const {\n      width,\n      height,\n      context,\n      x,\n      y,\n      scale_on_zoom,\n      globalScale,\n      offset_x,\n      offset_y,\n    } = options;\n    const finalWidth = scale_on_zoom ? width / globalScale : width;\n    const finalHeight = scale_on_zoom ? height / globalScale : height;\n    context.rect(\n      offset_x + x - finalWidth / 2,\n      offset_y + y - finalHeight / 2,\n      finalWidth,\n      finalHeight\n    );\n  }\n\n  protected _drawThreeGeometry(\n    options: IRectangleOptions & INodeOptions\n  ): THREE.BufferGeometry {\n    const _THREE: typeof THREE = options.iframeClasses.THREE;\n    return new _THREE.BoxGeometry(options.width, options.height, options.depth);\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type * as D3Color from 'd3-color';\n\nimport { IBackboneModelOptions } from '@jupyter-widgets/base';\n\nimport { replaceCssVars } from '../../theme-utils';\nimport { widget_serialization } from '../serializers/widget';\n\nimport { DynamicModel } from './base';\n\nexport class WrapperModel extends DynamicModel {\n  static serializers = {\n    ...DynamicModel.serializers,\n    wrapped: widget_serialization,\n  };\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:wrapped', this.wrappedChanged, this);\n    this.wrappedChanged();\n  }\n\n  get wrapped(): DynamicModel | WrapperModel {\n    return this.get('wrapped');\n  }\n\n  get previousWrapped(): DynamicModel | null {\n    return (this.previous && this.previous('wrapped')) || null;\n  }\n\n  protected wrappedChanged() {\n    const { wrapped, previousWrapped } = this;\n    if (previousWrapped && previousWrapped.updateRequested) {\n      previousWrapped.updateRequested.disconnect(this.valueChanged, this);\n    }\n    if (wrapped && wrapped.updateRequested) {\n      wrapped.updateRequested.connect(this.valueChanged, this);\n    }\n    this.valueChanged();\n  }\n}\n\nexport class CaptureAsModel extends WrapperModel {\n  static model_name = 'CaptureAsModel';\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:colunmn_name', this.valueChanged, this);\n  }\n\n  get columnName(): string {\n    return this.get('column_name');\n  }\n\n  async ensureHandlers(): Promise<void> {\n    if (this._nodeHandler && this._linkHandler) {\n      return;\n    }\n    const { columnName, wrapped } = this;\n\n    if (wrapped.ensureHandlers) {\n      await wrapped.ensureHandlers();\n      this._nodeHandler = (opts: any) => {\n        const value = (opts.node[columnName] = wrapped.nodeHandler(opts));\n        return value;\n      };\n      this._linkHandler = (opts: any) => {\n        const value = (opts.link[columnName] = wrapped.linkHandler(opts));\n        return value;\n      };\n    } else {\n      this._nodeHandler = (opts: any) => {\n        return (opts.node[columnName] = wrapped);\n      };\n      this._linkHandler = (opts: any) => {\n        return (opts.link[columnName] = wrapped);\n      };\n    }\n  }\n}\n\nexport class ReplaceCssVariablesModel extends WrapperModel {\n  static model_name = 'ReplaceCssVariablesModel';\n\n  async ensureHandlers(): Promise<void> {\n    if (this._nodeHandler) {\n      return;\n    }\n    const { wrapped } = this;\n    if (wrapped.ensureHandlers) {\n      await wrapped.ensureHandlers();\n      this._nodeHandler = (opts: any) => replaceCssVars(wrapped.nodeHandler(opts));\n      this._linkHandler = (opts: any) => replaceCssVars(wrapped.linkHandler(opts));\n    } else {\n      this._nodeHandler = (opts: any) => replaceCssVars(`${wrapped}`);\n      this._linkHandler = (opts: any) => replaceCssVars(`${wrapped}`);\n    }\n  }\n}\n\nconst SPACES = {\n  rgb: ['r', 'g', 'b', 'opacity'],\n  hsl: ['h', 's', 'l', 'opacity'],\n  lab: ['l', 'a', 'b', 'opacity'],\n  hcl: ['l', 'c', 'h', 'opacity'],\n  cubehelix: ['h', 's', 'l', 'opacity'],\n};\n\nconst OPT_KEYS = ['space', 'r', 'g', 'b', 'a', 'h', 's', 'l', 'c', 'opacity'];\n\ninterface ISpaceOptions {\n  space: keyof typeof SPACES;\n  a: number | null;\n  b: number | null;\n  c: number | null;\n  g: number | null;\n  h: number | null;\n  l: number | null;\n  r: number | null;\n  s: number | null;\n  opacity: number | null;\n}\n\nexport class ColorizeModel extends WrapperModel {\n  static model_name = 'ColorizeModel';\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    const events = [];\n    for (let key of OPT_KEYS) {\n      events.push(`change:${key}`);\n    }\n    this.on(events.join(' '), this.valueChanged, this);\n  }\n\n  async ensureHandlers(): Promise<void> {\n    if (this._nodeHandler) {\n      return;\n    }\n    const cache: Record<string, string> = {};\n    const d3c = await import('d3-color');\n    const colorOpts: Partial<ISpaceOptions> = {};\n    for (let opt of OPT_KEYS) {\n      colorOpts[opt] = this.get(opt);\n    }\n    const { wrapped } = this;\n    if (wrapped.ensureHandlers) {\n      await wrapped.ensureHandlers();\n      this._nodeHandler = (opts: any) => {\n        return _colorize(\n          wrapped.nodeHandler(opts),\n          colorOpts as ISpaceOptions,\n          d3c,\n          cache\n        );\n      };\n      this._linkHandler = (opts: any) => {\n        return _colorize(\n          wrapped.linkHandler(opts),\n          colorOpts as ISpaceOptions,\n          d3c,\n          cache\n        );\n      };\n    } else {\n      this._nodeHandler = (opts: any) => {\n        return _colorize(wrapped as any, colorOpts as ISpaceOptions, d3c, cache);\n      };\n      this._linkHandler = (opts: any) => {\n        return _colorize(wrapped as any, colorOpts as ISpaceOptions, d3c, cache);\n      };\n    }\n  }\n}\n\nfunction _colorize(\n  color: string,\n  opts: ISpaceOptions,\n  d3c: typeof D3Color,\n  cache: Record<string, string>\n): string {\n  let mapped = cache[color];\n  if (!mapped) {\n    const dColor = d3c[opts.space](color);\n    for (let channel of SPACES[opts.space]) {\n      const value = opts[channel];\n      if (value != null) {\n        dColor[channel] += value;\n      }\n    }\n    mapped = cache[color] = `${dColor}`;\n  }\n  return mapped;\n}\n\nexport class TintModel extends WrapperModel {\n  static model_name = 'TintModel';\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:value', this.valueChanged, this);\n  }\n\n  async ensureHandlers(): Promise<void> {\n    if (this._nodeHandler) {\n      return;\n    }\n    const value = this.get('value');\n    const cache: Record<string, string> = {};\n    const d3c = await import('d3-color');\n    const { wrapped } = this;\n    if (wrapped.ensureHandlers) {\n      await wrapped.ensureHandlers();\n      this._nodeHandler = (opts: any) => {\n        return _tint(wrapped.nodeHandler(opts), value, d3c, cache);\n      };\n      this._linkHandler = (opts: any) => {\n        return _tint(wrapped.linkHandler(opts), value, d3c, cache);\n      };\n    } else {\n      this._nodeHandler = (opts: any) => {\n        return _tint(wrapped as any, value, d3c, cache);\n      };\n      this._linkHandler = (opts: any) => {\n        return _tint(wrapped as any, value, d3c, cache);\n      };\n    }\n  }\n}\n\nfunction _tint(\n  color: string,\n  tint: number,\n  d3c: typeof D3Color,\n  cache: Record<string, string>\n): string {\n  if (tint === 0) {\n    return color;\n  }\n  let mapped = cache[color];\n  if (!mapped) {\n    let dc = d3c.color(color);\n    mapped = cache[color] = (\n      tint > 0 ? dc.brighter(tint) : dc.darker(-tint)\n    ).formatRgb();\n  }\n  return mapped;\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { ObjectHash } from 'backbone';\nimport type {\n  ForceGraphGenericInstance,\n  ForceGraphInstance,\n  GraphData,\n  LinkObject,\n  NodeObject,\n} from 'force-graph';\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Throttler } from '@lumino/polling';\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport {\n  DOMWidgetModel,\n  DOMWidgetView,\n  IBackboneModelOptions,\n  WidgetView,\n} from '@jupyter-widgets/base';\n\nimport { getThemeManager } from '../../theme-utils';\nimport {\n  CSS,\n  DEBUG,\n  DEFAULT_COLORS,\n  DEFAULT_CURVATURES,\n  DEFAULT_LINE_DASHES,\n  DEFAULT_WIDTHS,\n  EGraphBehaveMethod,\n  ELinkBehaveMethod,\n  EMOJI,\n  EMPTY_GRAPH_DATA,\n  ENodeBehaveMethod,\n  EUpdate,\n  IActionMessage,\n  IBehave,\n  IHasGraph,\n  ILinkBehaveOptions,\n  ILinkCanvasBehaveOptions,\n  ILinkEventBehaveOptions,\n  INodeBehaveOptions,\n  INodeCanvasBehaveOptions,\n  INodeEventBehaveOptions,\n  IPreservedColumns,\n  IRenderOptions,\n  ISource,\n  IZoomData,\n  TAnyForce,\n  THROTTLE_OPTS,\n  TLinkBehaveMethod,\n  TNodeBehaveMethod,\n  TUpdateKind,\n  WIDGET_DEFAULTS,\n  emptyPreservedColumns,\n} from '../../tokens';\nimport {\n  DAGBehaviorModel,\n  FacetedForceModel,\n  GraphForcesModel,\n  WrapperModel,\n} from '../behaviors';\nimport { widget_serialization } from '../serializers/widget';\n\nexport class ForceGraphModel extends DOMWidgetModel {\n  static model_name = 'ForceGraphModel';\n  static serializers = {\n    ...DOMWidgetModel.serializers,\n    source: widget_serialization,\n    behaviors: widget_serialization,\n    background_color: widget_serialization,\n    default_link_color: widget_serialization,\n    default_link_curvature: widget_serialization,\n    default_link_line_dash: widget_serialization,\n    default_link_width: widget_serialization,\n    default_node_color: widget_serialization,\n    default_node_size: widget_serialization,\n  };\n\n  protected _nodeBehaviorsByMethod: IBehave[][];\n  protected _linkBehaviorsByMethod: IBehave[][];\n  protected _graphBehaviorsByMethod: IBehave[][];\n  protected _forceBehaviors: GraphForcesModel[];\n  protected _behaviorsChanged: Signal<ForceGraphModel, void>;\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: ForceGraphModel.model_name,\n      _view_name: ForceGraphView.view_name,\n      source: null,\n      behaviors: [],\n      background_color: DEFAULT_COLORS.background,\n      default_link_color: DEFAULT_COLORS.link,\n      default_link_curvature: DEFAULT_CURVATURES.link,\n      default_link_line_dash: DEFAULT_LINE_DASHES.link,\n      default_link_width: DEFAULT_WIDTHS.link,\n      default_node_color: DEFAULT_COLORS.node,\n      default_node_size: DEFAULT_WIDTHS.node,\n    };\n  }\n\n  initialize(attributes: ObjectHash, options: IBackboneModelOptions): void {\n    super.initialize(attributes, options);\n    this.on('change:behaviors', this.onBehaviorsChange, this);\n    const themeManager = getThemeManager();\n    if (themeManager) {\n      themeManager.themeChanged.connect(this.onBehaviorsChange, this);\n    }\n    void this.onBehaviorsChange();\n  }\n\n  compareRank(behaviorA: IBehave, behaviorB: IBehave) {\n    return (\n      behaviorA.rank - behaviorB.rank ||\n      parseInt(behaviorA.cid.slice(1)) - parseInt(behaviorB.cid.slice(1))\n    );\n  }\n\n  async onBehaviorsChange(): Promise<void> {\n    if (!this._behaviorsChanged) {\n      this._behaviorsChanged = new Signal(this);\n      this._linkBehaviorsByMethod = [];\n      this._nodeBehaviorsByMethod = [];\n      this._graphBehaviorsByMethod = [];\n    }\n    const { behaviors } = this;\n\n    for (let [linkMethod, eLinkMethod] of Object.entries(ELinkBehaveMethod)) {\n      let methodBehaviors: IBehave[] = [];\n      for (const behavior of behaviors) {\n        if (behavior[linkMethod]) {\n          methodBehaviors.push(behavior);\n        }\n      }\n      this._linkBehaviorsByMethod[eLinkMethod] = methodBehaviors.sort(this.compareRank);\n    }\n\n    for (let [nodeMethod, eNodeMethod] of Object.entries(ENodeBehaveMethod)) {\n      let methodBehaviors: IBehave[] = [];\n      for (const behavior of behaviors) {\n        if (behavior[nodeMethod]) {\n          methodBehaviors.push(behavior);\n        }\n      }\n      this._nodeBehaviorsByMethod[eNodeMethod] = methodBehaviors.sort(this.compareRank);\n    }\n\n    for (let [graphMethod, eGraphMethod] of Object.entries(EGraphBehaveMethod)) {\n      let graphBehaviors: IBehave[] = [];\n      for (const behavior of behaviors) {\n        if (behavior[graphMethod]) {\n          graphBehaviors.push(behavior);\n        }\n      }\n\n      this._graphBehaviorsByMethod[eGraphMethod] = graphBehaviors.sort(\n        this.compareRank\n      );\n    }\n\n    let forceBehaviors: GraphForcesModel[] = [];\n    for (const behavior of behaviors) {\n      if ((behavior as any)?.forces) {\n        forceBehaviors.push(behavior as GraphForcesModel);\n      }\n    }\n    this._forceBehaviors = forceBehaviors.sort(this.compareRank);\n\n    this._behaviorsChanged.emit(void 0);\n  }\n\n  get linkBehaviorsByMethod(): IBehave[][] {\n    return this._linkBehaviorsByMethod;\n  }\n\n  get nodeBehaviorsByMethod(): IBehave[][] {\n    return this._nodeBehaviorsByMethod;\n  }\n\n  get graphBehaviorsByMethod(): IBehave[][] {\n    return this._graphBehaviorsByMethod;\n  }\n\n  get forceBehaviors(): GraphForcesModel[] {\n    return this._forceBehaviors;\n  }\n\n  get graphData(): GraphData {\n    const source = this.get('source');\n    return source ? source.graphData : EMPTY_GRAPH_DATA;\n  }\n\n  get preservedColumns(): IPreservedColumns {\n    const source = this.get('source');\n    return source ? source.preservedColumns : emptyPreservedColumns;\n  }\n\n  get behaviors(): IBehave[] {\n    return this.get('behaviors') || [];\n  }\n\n  get behaviorsChanged(): ISignal<ForceGraphModel, void> {\n    return this._behaviorsChanged;\n  }\n\n  get previousBehaviors(): IBehave[] {\n    return (this.previous && this.previous('behaviors')) || [];\n  }\n\n  get defaultNodeColor(): string {\n    return this.get('default_node_color') || DEFAULT_COLORS.node;\n  }\n\n  get defaultNodeSize(): string {\n    return this.get('default_node_size') || DEFAULT_WIDTHS.node;\n  }\n\n  get defaultLinkColor(): string {\n    return this.get('default_link_color') || DEFAULT_COLORS.link;\n  }\n\n  get defaultLinkCurvature(): string {\n    return this.get('default_link_curvature') || DEFAULT_CURVATURES.link;\n  }\n\n  get defaultLinkLineDash(): string {\n    return this.get('default_link_line_dash') || DEFAULT_LINE_DASHES.link;\n  }\n\n  get defaultLinkWidth(): string {\n    return this.get('default_link_width') || DEFAULT_WIDTHS.link;\n  }\n\n  get backgroundColor(): string | WrapperModel {\n    return this.get('background_color') || DEFAULT_COLORS.background;\n  }\n}\n\nexport class ForceGraphView<T = ForceGraphGenericInstance<ForceGraphInstance>>\n  extends DOMWidgetView\n  implements IHasGraph<T>\n{\n  static view_name = 'ForceGraphView';\n  graph: T;\n  model: ForceGraphModel;\n\n  protected _rendered: PromiseDelegate<void>;\n  protected _iframe: HTMLIFrameElement | null;\n  protected _iframeClasses: Record<string, any>;\n\n  protected _nodeBehaviorsByMethod: IBehave[][];\n  protected _linkBehaviorsByMethod: IBehave[][];\n  protected _graphBehaviorsByMethod: IBehave[][];\n\n  get source(): ISource {\n    return this.model.get('source');\n  }\n\n  get previousSource(): ISource | null {\n    return (this.model.previous && this.model.previous('source')) || null;\n  }\n\n  get rendered(): Promise<void> {\n    return this._rendered.promise;\n  }\n\n  initialize(parameters: WidgetView.IInitializeParameters<ForceGraphModel>) {\n    super.initialize(parameters);\n    this.luminoWidget.addClass(CSS.widget);\n    this.luminoWidget.addClass(`${CSS.widget}-${this.graphJsClass}`);\n    this._rendered = new PromiseDelegate();\n    this.model.on('change:source', this.onSourceChange, this);\n    this.model.on(\n      'change:default_node_color change:default_link_color change:background_color change:default_node_size change:default_link_width change:default_link_curvature change:default_link_line_dash',\n      this.postUpdate,\n      this\n    );\n\n    this.model.behaviorsChanged.connect(this.onBehaviorsChange, this);\n    this.luminoWidget.disposed.connect(this.onDisposed, this);\n    this.model.on('msg:custom', this.handleMessage, this);\n    this.onSourceChange();\n    void this.onBehaviorsChange();\n  }\n\n  handleMessage(message: IActionMessage): void {\n    const graph = this.graph as ForceGraphInstance;\n\n    if (!graph) {\n      console.warn(`${EMOJI} graph was not yet initialized, discarding`, message);\n      return;\n    }\n\n    switch (message.action) {\n      case 'reheat':\n        graph.d3ReheatSimulation();\n        break;\n      default:\n        const exhaustiveCheck: never = message.action;\n        console.error(`${EMOJI} Unhandled custom action: ${exhaustiveCheck}`);\n    }\n  }\n\n  onDisposed() {\n    if (this.graph) {\n      (this.graph as any)._destructor();\n      delete this.graph;\n      this.graph = null;\n    }\n\n    if (this._iframe) {\n      this._iframe.removeEventListener('resize', this.onWindowResize);\n      this._iframe.onload = null;\n      delete this._iframe;\n      this._iframe = null;\n    }\n\n    this.luminoWidget.disposed.disconnect(this.onDisposed);\n  }\n\n  async render(): Promise<void> {\n    const root = this.el as HTMLDivElement;\n    const iframe = document.createElement('iframe');\n    const iframeSrc = await this.getIframeSource();\n    iframe.setAttribute('srcdoc', iframeSrc);\n    iframe.onload = this.onFrameLoaded;\n    root.appendChild(iframe);\n    this._iframe = iframe;\n  }\n\n  protected onFrameLoaded = async (event: Event) => {\n    const iframe = event.currentTarget as HTMLIFrameElement;\n    const { contentWindow } = iframe;\n\n    const initResult = (contentWindow as any).init();\n\n    const graph: ForceGraphInstance = initResult.graph;\n    this._iframeClasses = initResult.iframeClasses;\n    this.graph = graph as any;\n    contentWindow.addEventListener('resize', this.onWindowResize);\n    this._rendered.resolve(void 0);\n    await this.onGraphInitialized();\n    await this.redraw();\n  };\n\n  protected async onGraphInitialized(): Promise<void> {\n    // just for overloading\n  }\n\n  protected onWindowResize = () => {\n    const { contentWindow } = this._iframe;\n    const graph: ForceGraphInstance = this.graph as any;\n    graph.width(contentWindow.innerWidth);\n    graph.height(contentWindow.innerHeight);\n  };\n\n  protected async getJsUrls(): Promise<string[]> {\n    return [\n      (\n        await import(\n          '!!file-loader!../../../node_modules/force-graph/dist/force-graph.js'\n        )\n      ).default as any,\n    ];\n  }\n\n  protected get graphJsClass(): string {\n    return 'ForceGraph';\n  }\n\n  protected get extraJsClasses(): string {\n    return '{}';\n  }\n\n  protected async getIframeSource(): Promise<string> {\n    let urls = await this.getJsUrls();\n\n    let scripts = '';\n\n    for (const url of urls) {\n      scripts += `<script src=\"${url}\"></script>\\n`;\n    }\n\n    let src = `\n      <head>\n        ${scripts}\n        <style>\n          body, #main {\n            overflow: hidden;\n            position: absolute;\n            left: 0;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            margin: 0;\n            padding: 0;\n          }\n        </style>\n      </head>\n      <body>\n        <script>\n          window.process = {\n            env: {\n              NODE_ENV: '${DEBUG ? 'development' : 'production'}'\n            }\n          };\n          window.init = (args) => {\n            const div = document.createElement('div');\n            document.body.appendChild(div);\n            const graph = ${this.graphJsClass}(args || {})(div);\n\n            ${this.graphJsPostInit}\n\n            return {\n              graph,\n              iframeClasses: ${this.extraJsClasses}\n            };\n          }\n          window.wrapFunction = (fn) => {\n            return (...args) => {\n              return fn(...args);\n            };\n          }\n        </script>\n      </body>\n    `;\n    return src;\n  }\n\n  protected get graphJsPostInit() {\n    return `graph.linkCanvasObjectMode(() => 'after');`;\n  }\n\n  async redraw(): Promise<void> {\n    await this._rendered.promise;\n    await this.postUpdate();\n    const graph = this.graph as any;\n    if (!graph) {\n      console.warn(`${EMOJI} no graph to redraw`);\n      return;\n    }\n    graph.pauseAnimation();\n    const { preservedColumns } = this.model;\n    let graphData = this.model.graphData;\n    const oldGraphData = graph.graphData();\n    let needsFullRedraw = true;\n    if (\n      oldGraphData.nodes.length &&\n      (preservedColumns.nodes.length || preservedColumns.links.length)\n    ) {\n      const { source } = this;\n      graphData = source.mergePreserved(graphData, oldGraphData, preservedColumns);\n      needsFullRedraw = graphData != null;\n    }\n    if (needsFullRedraw) {\n      DEBUG && console.warn(`${EMOJI} updating...`, graphData);\n      graph.graphData(graphData);\n    }\n    graph.resumeAnimation();\n  }\n\n  wrapFunction = (fn: Function) => {\n    return (this._iframe.contentWindow as any).wrapFunction(fn);\n  };\n\n  onSourceChange(change?: any) {\n    const { source, previousSource } = this;\n\n    if (previousSource) {\n      previousSource.dataUpdated.disconnect(this.redraw, this);\n    }\n\n    if (source) {\n      source.dataUpdated.connect(this.redraw, this);\n      this.redraw();\n    }\n  }\n\n  protected async ensureAllFacets() {\n    let facetPromises: Promise<void>[] = [];\n\n    for (const behavior of this.model.behaviors) {\n      // TOOD: remove the any\n      if ((behavior as any)?.ensureFacets) {\n        facetPromises.push((behavior as any).ensureFacets());\n      }\n    }\n\n    if (facetPromises.length) {\n      await Promise.all(facetPromises);\n    }\n  }\n\n  protected async ensureBehaviorCache() {\n    this._nodeBehaviorsByMethod = this.model.nodeBehaviorsByMethod;\n    this._linkBehaviorsByMethod = this.model.linkBehaviorsByMethod;\n    this._graphBehaviorsByMethod = this.model.graphBehaviorsByMethod;\n  }\n\n  protected async onGraphDataUpdateRequested(behavior: IBehave) {\n    const graph = this.graph as ForceGraphInstance;\n    if (graph && behavior.updateGraphData) {\n      await behavior.updateGraphData(graph.graphData());\n    }\n  }\n\n  protected async onGraphCameraUpdateRequested(behavior: IBehave) {\n    const graph = this.graph as ForceGraphInstance;\n    if (graph && behavior.updateGraphCamera) {\n      await behavior.updateGraphCamera({ graph, iframeClasses: this._iframeClasses });\n    }\n  }\n\n  protected async maybeEvaluate(facet: string | WrapperModel): Promise<string> {\n    if ((facet as any)?.ensureHandlers) {\n      await (facet as WrapperModel).ensureHandlers();\n      return (facet as WrapperModel).nodeHandler();\n    }\n    return facet as string;\n  }\n\n  protected async postUpdate(caller?: any, kind?: TUpdateKind): Promise<void> {\n    await this.displayed;\n    await this.rendered;\n    const graph = this.graph as ForceGraphInstance;\n    if (!graph) {\n      console.warn(`${EMOJI} no graph to postUpdate`);\n      return;\n    }\n\n    if (kind && EUpdate.Behavior === (kind & EUpdate.Behavior)) {\n      await this.model.onBehaviorsChange();\n      return;\n    }\n\n    await this.ensureAllFacets();\n    await this.ensureBehaviorCache();\n\n    const { _linkBehaviorsByMethod, _nodeBehaviorsByMethod } = this;\n\n    const {\n      backgroundColor,\n      defaultLinkColor,\n      defaultNodeColor,\n      defaultLinkWidth,\n      defaultLinkCurvature,\n      defaultLinkLineDash,\n      defaultNodeSize,\n    } = this.model;\n\n    // graph\n    graph.backgroundColor(await this.maybeEvaluate(backgroundColor));\n\n    // link\n    const finalDefaultLinkColor = await this.maybeEvaluate(defaultLinkColor);\n    graph.linkColor(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkColor].length\n        ? this.wrapFunction(this.getLinkColor)\n        : this.wrapFunction(() => finalDefaultLinkColor)\n    );\n    const finalDefaulLinkWidth = await this.maybeEvaluate(defaultLinkWidth);\n    graph.linkWidth(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkWidth].length\n        ? this.wrapFunction(this.getLinkWidth)\n        : this.wrapFunction(() => finalDefaulLinkWidth)\n    );\n    const finalDefaultLinkCurvature = await this.maybeEvaluate(defaultLinkCurvature);\n    graph.linkCurvature(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkCurvature].length\n        ? this.wrapFunction(this.getLinkCurvature)\n        : this.wrapFunction(() => finalDefaultLinkCurvature)\n    );\n    if (typeof graph['linkLineDash'] === 'function') {\n      graph.linkLineDash(\n        _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkLineDash].length\n          ? this.wrapFunction(this.getLinkLineDash)\n          : this.wrapFunction(() => defaultLinkLineDash)\n      );\n    }\n    graph.linkLabel(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkLabel].length\n        ? this.wrapFunction(this.getLinkLabel)\n        : null\n    );\n\n    graph.linkDirectionalArrowColor(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalArrowColor].length\n        ? this.wrapFunction(this.getLinkDirectionalArrowColor)\n        : null\n    );\n    graph.linkDirectionalArrowLength(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalArrowLength].length\n        ? this.wrapFunction(this.getLinkDirectionalArrowLength)\n        : null\n    );\n    graph.linkDirectionalArrowRelPos(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalArrowRelPos].length\n        ? this.wrapFunction(this.getLinkDirectionalArrowRelPos)\n        : null\n    );\n    graph.linkDirectionalParticleColor(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalParticleColor].length\n        ? this.wrapFunction(this.getLinkDirectionalParticleColor)\n        : null\n    );\n    graph.linkDirectionalParticleSpeed(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalParticleSpeed].length\n        ? this.wrapFunction(this.getLinkDirectionalParticleSpeed)\n        : null\n    );\n    graph.linkDirectionalParticleWidth(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalParticleWidth].length\n        ? this.wrapFunction(this.getLinkDirectionalParticleWidth)\n        : null\n    );\n    graph.linkDirectionalParticles(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.getLinkDirectionalParticles].length\n        ? this.wrapFunction(this.getLinkDirectionalParticles)\n        : null\n    );\n\n    // node\n    const finalDefaultNodeColor = await this.maybeEvaluate(defaultNodeColor);\n    graph.nodeColor(\n      _nodeBehaviorsByMethod[ENodeBehaveMethod.getNodeColor].length\n        ? this.wrapFunction(this.getNodeColor)\n        : this.wrapFunction(() => finalDefaultNodeColor)\n    );\n    graph.nodeVal(\n      _nodeBehaviorsByMethod[ENodeBehaveMethod.getNodeSize].length\n        ? this.wrapFunction(this.getNodeSize)\n        : this.wrapFunction(() => defaultNodeSize)\n    );\n    graph.nodeLabel(\n      _nodeBehaviorsByMethod[ENodeBehaveMethod.getNodeLabel].length\n        ? this.wrapFunction(this.getNodeLabel)\n        : null\n    );\n\n    // evented\n    graph.onNodeClick(\n      _nodeBehaviorsByMethod[ENodeBehaveMethod.onNodeClick].length\n        ? this.wrapFunction(this.onNodeClick)\n        : null\n    );\n    graph.onLinkClick(\n      _linkBehaviorsByMethod[ELinkBehaveMethod.onLinkClick].length\n        ? this.wrapFunction(this.onLinkClick)\n        : null\n    );\n\n    // forces\n    this.getForceUpdate();\n\n    // finally, (3d-)force-graph-specific after all other behaviors\n    this.getOnRenderPostUpdate();\n\n    if (kind && EUpdate.Reheat === (kind & EUpdate.Reheat)) {\n      graph.d3ReheatSimulation();\n    }\n  }\n\n  protected getForceUpdate() {\n    const graph = this.graph as ForceGraphInstance;\n    let needsPost: TAnyForce[] = [];\n\n    for (let simBehavior of this.model.forceBehaviors) {\n      const { warmupTicks, cooldownTicks, alphaDecay, alphaMin, velocityDecay } =\n        simBehavior;\n      simBehavior.checkPositions(graph);\n      graph.cooldownTicks(cooldownTicks);\n      graph.warmupTicks(warmupTicks);\n      graph.d3AlphaDecay(alphaDecay);\n      graph.d3AlphaMin(alphaMin);\n      graph.d3VelocityDecay(velocityDecay);\n\n      for (let key in simBehavior.forces) {\n        let behavior: FacetedForceModel | null = simBehavior.forces[key];\n        let force = behavior?.force || null;\n        if (force && !behavior?.active) {\n          force = null;\n        }\n\n        // DAG behavior is treated different compared to other pure D3 Forces.\n        if (behavior instanceof DAGBehaviorModel) {\n          (behavior as DAGBehaviorModel).refreshBehavior(graph);\n        } else {\n          graph.d3Force(key, force);\n        }\n\n        if (force?.links) {\n          needsPost.push(force);\n        }\n      }\n    }\n    if (needsPost.length) {\n      setTimeout(this.postForceUpdate, 250, needsPost);\n    }\n  }\n\n  protected postForceUpdate = (forces: TAnyForce[]) => {\n    const { links } = (this.graph as ForceGraphInstance).graphData();\n    if (!links.length) {\n      return;\n    }\n    const firstSource = typeof links[0].source;\n    if (firstSource === 'string' || firstSource === 'number') {\n      setTimeout(this.postForceUpdate, 250, forces);\n      DEBUG && console.log('Polling postForceUpdate...');\n      return;\n    }\n    for (let force of forces) {\n      if (force.links) {\n        force.links(links);\n      }\n    }\n  };\n\n  protected getOnRenderPostUpdate() {\n    const graph = this.graph as ForceGraphInstance;\n\n    graph.nodeCanvasObject(\n      this._nodeBehaviorsByMethod[ENodeBehaveMethod.getNodeCanvasObject].length\n        ? this.wrapFunction(this.getNodeCanvasObject)\n        : null\n    );\n\n    const canvasFn = this._linkBehaviorsByMethod[ELinkBehaveMethod.getLinkCanvasObject]\n      .length\n      ? this.wrapFunction(this.getLinkCanvasObject)\n      : null;\n\n    // graph.linkCanvasObjectMode(() => 'after');\n\n    graph.linkCanvasObject(canvasFn);\n\n    graph.onRenderFramePost(\n      this._graphBehaviorsByMethod[EGraphBehaveMethod.onRender].length\n        ? this.wrapFunction(this.onRender)\n        : null\n    );\n\n    if (this._graphBehaviorsByMethod[EGraphBehaveMethod.onZoom].length) {\n      const throttled = new Throttler(\n        this.wrapFunction((zoomData: any) => this.onZoom(zoomData)),\n        THROTTLE_OPTS\n      );\n      graph.onZoom((zoomData) => throttled.invoke(zoomData));\n    } else {\n      graph.onZoom(null);\n    }\n  }\n\n  // composable behaviors\n  async onBehaviorsChange(): Promise<void> {\n    const { behaviors, previousBehaviors } = this.model;\n\n    for (const behavior of previousBehaviors) {\n      behavior.updateRequested.disconnect(this.postUpdate, this);\n    }\n\n    for (const behavior of behaviors) {\n      behavior.updateRequested.connect(this.postUpdate, this);\n      behavior.graphDataUpdateRequested.connect(this.onGraphDataUpdateRequested, this);\n      behavior.graphCameraUpdateRequested.connect(\n        this.onGraphCameraUpdateRequested,\n        this\n      );\n    }\n\n    await this.postUpdate();\n  }\n\n  // link behaviors\n  protected getLinkColor = (link: LinkObject): string => {\n    const color = this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkColor,\n      'getLinkColor',\n      this.model.defaultLinkColor\n    );\n    return color;\n  };\n  protected getLinkCurvature = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkCurvature,\n      'getLinkCurvature',\n      this.model.defaultLinkCurvature\n    );\n  };\n  protected getLinkLineDash = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkLineDash,\n      'getLinkLineDash',\n      this.model.defaultLinkLineDash\n    );\n  };\n  protected getLinkWidth = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkWidth,\n      'getLinkWidth',\n      this.model.defaultLinkWidth\n    );\n  };\n\n  protected getLinkLabel = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkLabel,\n      'getLinkLabel',\n      ''\n    );\n  };\n\n  protected getLinkDirectionalArrowColor = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkDirectionalArrowColor,\n      'getLinkDirectionalArrowColor',\n      ''\n    );\n  };\n\n  protected getLinkDirectionalArrowLength = (link: LinkObject): string => {\n    return this.castToNumber(\n      this.getComposedLinkAttr(\n        link,\n        ELinkBehaveMethod.getLinkDirectionalArrowLength,\n        'getLinkDirectionalArrowLength',\n        ''\n      )\n    );\n  };\n\n  protected getLinkDirectionalArrowRelPos = (link: LinkObject): string => {\n    return this.castToNumber(\n      this.getComposedLinkAttr(\n        link,\n        ELinkBehaveMethod.getLinkDirectionalArrowRelPos,\n        'getLinkDirectionalArrowRelPos',\n        ''\n      )\n    );\n  };\n\n  protected getLinkDirectionalParticleColor = (link: LinkObject): string => {\n    return this.getComposedLinkAttr(\n      link,\n      ELinkBehaveMethod.getLinkDirectionalParticleColor,\n      'getLinkDirectionalParticleColor',\n      ''\n    );\n  };\n\n  protected getLinkDirectionalParticleSpeed = (link: LinkObject): string => {\n    return this.castToNumber(\n      this.getComposedLinkAttr(\n        link,\n        ELinkBehaveMethod.getLinkDirectionalParticleSpeed,\n        'getLinkDirectionalParticleSpeed',\n        ''\n      )\n    );\n  };\n\n  protected getLinkDirectionalParticleWidth = (link: LinkObject): string => {\n    return this.castToNumber(\n      this.getComposedLinkAttr(\n        link,\n        ELinkBehaveMethod.getLinkDirectionalParticleWidth,\n        'getLinkDirectionalParticleWidth',\n        ''\n      )\n    );\n  };\n\n  protected getLinkDirectionalParticles = (link: LinkObject): string => {\n    return this.castToNumber(\n      this.getComposedLinkAttr(\n        link,\n        ELinkBehaveMethod.getLinkDirectionalParticles,\n        'getLinkDirectionalParticles',\n        ''\n      )\n    );\n  };\n\n  protected castToNumber(value: string | number | null): any {\n    if (value == null) {\n      return value as any;\n    } else if (typeof value == 'string') {\n      return parseFloat(value);\n    }\n    return value;\n  }\n\n  getComposedLinkAttr(\n    link: LinkObject,\n    methodIdx: ELinkBehaveMethod,\n    methodName: TLinkBehaveMethod,\n    defaultValue: string\n  ) {\n    let value: string | null;\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    const options: ILinkBehaveOptions = {\n      view: this,\n      index: graphData.links.indexOf(link),\n      graphData,\n      link,\n    };\n\n    for (const behavior of this._linkBehaviorsByMethod[methodIdx]) {\n      let method = behavior[methodName] as any;\n      value = method.call(behavior, options);\n      if (value != null) {\n        break;\n      }\n    }\n\n    return value != null ? value : defaultValue;\n  }\n\n  protected getLinkCanvasObject = (\n    link: LinkObject,\n    context: CanvasRenderingContext2D\n  ): void => {\n    let value: string | null;\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    const options: ILinkCanvasBehaveOptions = {\n      view: this,\n      index: graphData.links.indexOf(link),\n      context,\n      graphData,\n      link,\n    };\n\n    for (const behavior of this._linkBehaviorsByMethod[\n      ELinkBehaveMethod.getLinkCanvasObject\n    ]) {\n      let method = behavior.getLinkCanvasObject;\n      value = method.call(behavior, options);\n      if (value != null) {\n        break;\n      }\n    }\n  };\n\n  // node behaviors\n  protected getNodeColor = (node: NodeObject): string => {\n    return this.getComposedNodeAttr(\n      node,\n      ENodeBehaveMethod.getNodeColor,\n      'getNodeColor',\n      this.model.defaultNodeColor\n    );\n  };\n\n  protected getNodeLabel = (node: NodeObject): string => {\n    return this.getComposedNodeAttr(\n      node,\n      ENodeBehaveMethod.getNodeLabel,\n      'getNodeLabel',\n      ''\n    );\n  };\n\n  protected getNodeSize = (node: NodeObject): string => {\n    return this.getComposedNodeAttr(\n      node,\n      ENodeBehaveMethod.getNodeSize,\n      'getNodeSize',\n      this.model.defaultNodeSize\n    );\n  };\n\n  protected getNodeCanvasObject = (\n    node: NodeObject,\n    context: CanvasRenderingContext2D,\n    globalScale: number\n  ): void => {\n    let value: string | null;\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    const options: INodeCanvasBehaveOptions = {\n      view: this,\n      context,\n      graphData,\n      node,\n      globalScale,\n    };\n\n    for (const behavior of this._nodeBehaviorsByMethod[\n      ENodeBehaveMethod.getNodeCanvasObject\n    ]) {\n      let method = behavior.getNodeCanvasObject;\n      value = method.call(behavior, options);\n      if (value != null) {\n        break;\n      }\n    }\n  };\n\n  getComposedNodeAttr(\n    node: NodeObject,\n    methodIdx: ENodeBehaveMethod,\n    methodName: TNodeBehaveMethod,\n    defaultValue: string\n  ) {\n    let value: string | null;\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    const options: INodeBehaveOptions = {\n      view: this,\n      graphData,\n      node,\n    };\n\n    for (const behavior of this._nodeBehaviorsByMethod[methodIdx]) {\n      let method = behavior[methodName] as any;\n      value = method.call(behavior, options);\n      if (value != null) {\n        break;\n      }\n    }\n\n    return value != null ? value : defaultValue;\n  }\n\n  protected onNodeClick = (node: NodeObject, event: MouseEvent) => {\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    let shouldContinue = true;\n    const options: INodeEventBehaveOptions = {\n      view: this,\n      graphData,\n      event,\n      node,\n      index: node['index'] != null ? node['index'] : graphData.nodes.indexOf(node),\n    };\n    for (const behavior of this._nodeBehaviorsByMethod[ENodeBehaveMethod.onNodeClick]) {\n      shouldContinue = behavior.onNodeClick(options);\n      if (!shouldContinue) {\n        return;\n      }\n    }\n  };\n\n  protected onLinkClick = (link: LinkObject, event: MouseEvent) => {\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    let shouldContinue = true;\n    const options: ILinkEventBehaveOptions = {\n      view: this,\n      graphData,\n      event,\n      link,\n      index: link['index'] != null ? link['index'] : graphData.links.indexOf(link),\n    };\n    for (const behavior of this._linkBehaviorsByMethod[ELinkBehaveMethod.onLinkClick]) {\n      shouldContinue = behavior.onLinkClick(options);\n      if (!shouldContinue) {\n        return;\n      }\n    }\n  };\n\n  protected onZoom = (zoom: IZoomData) => {\n    const graph = zoom.graph || (this.graph as ForceGraphInstance);\n    for (const behavior of this._graphBehaviorsByMethod[EGraphBehaveMethod.onZoom]) {\n      behavior.onZoom({ ...zoom, graph });\n    }\n  };\n\n  protected updateRenderOptions(options: IRenderOptions): IRenderOptions {\n    return options;\n  }\n\n  protected onRender = (ctx: CanvasRenderingContext2D, globalScale: any) => {\n    const graphData = (this.graph as ForceGraphInstance).graphData();\n    let options: IRenderOptions = {\n      view: this,\n      graphData,\n      context2d: ctx,\n      globalScale,\n    };\n    options = this.updateRenderOptions(options);\n    for (const behavior of this._graphBehaviorsByMethod[EGraphBehaveMethod.onRender]) {\n      behavior.onRender(options);\n    }\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type { ForceGraph3DGenericInstance, ForceGraph3DInstance } from '3d-force-graph';\nimport type { NodeObject } from 'force-graph';\nimport { LinkObject } from 'force-graph/dist/force-graph';\nimport type THREE from 'three';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls.js';\nimport type { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\n\nimport { Throttler } from '@lumino/polling';\n\nimport {\n  EGraphBehaveMethod,\n  ELinkBehaveMethod,\n  ENodeBehaveMethod,\n  ILinkThreeBehaveOptions,\n  INodeThreeBehaveOptions,\n  IRenderOptions,\n  IThreeLinkPosition,\n  THROTTLE_OPTS,\n} from '../../tokens';\n\nimport { ForceGraphModel, ForceGraphView } from './2d';\n\nexport type TAnyControls = OrbitControls | TrackballControls | FlyControls;\n\nexport class ForceGraph3DModel extends ForceGraphModel {\n  static model_name = 'ForceGraph3DModel';\n  static serializers = {\n    ...ForceGraphModel.serializers,\n  };\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: ForceGraph3DModel.model_name,\n      _view_name: ForceGraph3DView.view_name,\n    };\n  }\n}\n\nexport class ForceGraph3DView extends ForceGraphView<\n  ForceGraph3DGenericInstance<ForceGraph3DInstance>\n> {\n  static view_name = 'ForceGraph3DView';\n\n  private _threeRenderer: THREE.WebGLRenderer;\n  private _threeControls: TAnyControls;\n  private _threeCamera: THREE.PerspectiveCamera;\n\n  model: ForceGraph3DModel;\n\n  protected async onGraphInitialized(): Promise<void> {\n    const graph = this.graph as ForceGraph3DInstance;\n    this._threeRenderer = graph.renderer() as THREE.WebGLRenderer;\n    this._threeControls = graph.controls() as TAnyControls;\n    this._threeCamera = graph.camera() as THREE.PerspectiveCamera;\n\n    const throttled = new Throttler(() => this.onControlsChange(), THROTTLE_OPTS);\n\n    this._threeControls.addEventListener('change', () => throttled.invoke());\n  }\n\n  protected get graphJsClass(): string {\n    return 'ForceGraph3D';\n  }\n\n  protected get graphJsPostInit(): string {\n    return 'graph.linkThreeObjectExtend(true);';\n  }\n\n  protected get extraJsClasses(): string {\n    return `{\n      SpriteText: window.SpriteText,\n      THREE: window.THREE,\n    }`;\n  }\n\n  protected async getJsUrls(): Promise<string[]> {\n    return [\n      (await import('!!file-loader!../../../node_modules/three/build/three.js'))\n        .default as any,\n      (\n        await import(\n          '!!file-loader!../../../node_modules/3d-force-graph/dist/3d-force-graph.js'\n        )\n      ).default as any,\n      (\n        await import(\n          '!!file-loader!../../../node_modules/three-spritetext/dist/three-spritetext.js'\n        )\n      ).default as any,\n    ];\n  }\n\n  protected get threeRenderer(): THREE.WebGLRenderer {\n    return this._threeRenderer;\n  }\n\n  protected get threeControls(): TAnyControls {\n    return this._threeControls;\n  }\n\n  protected get threeCamera(): THREE.PerspectiveCamera {\n    return this._threeCamera;\n  }\n\n  protected onControlsChange = async (): Promise<void> => {\n    const position = this.graph.cameraPosition();\n    this.onZoom({\n      ...position,\n      graph: this.graph as any,\n      iframeClasses: this._iframeClasses,\n    });\n  };\n\n  protected getOnRenderPostUpdate() {\n    const graph = this.graph as ForceGraph3DInstance;\n\n    graph.nodeThreeObject(\n      this._nodeBehaviorsByMethod[ENodeBehaveMethod.getNodeThreeObject].length\n        ? this.wrapFunction(this.getNodeThreeObject)\n        : null\n    );\n\n    graph.linkPositionUpdate(\n      this._linkBehaviorsByMethod[ELinkBehaveMethod.getLinkPosition].length\n        ? this.wrapFunction(this.getLinkPosition)\n        : null\n    );\n\n    graph.linkThreeObject(\n      this._linkBehaviorsByMethod[ELinkBehaveMethod.getLinkThreeObject].length\n        ? this.wrapFunction(this.getLinkThreeObject)\n        : null\n    );\n\n    this.threeRenderer.setAnimationLoop(\n      this._graphBehaviorsByMethod[EGraphBehaveMethod.onRender].length\n        ? this.wrapFunction(this.onRender)\n        : null\n    );\n  }\n\n  protected getNodeThreeObject = (node: NodeObject): THREE.Object3D | null => {\n    let value: THREE.Object3D | null;\n    const graphData = (this.graph as ForceGraph3DInstance).graphData();\n    const options: INodeThreeBehaveOptions = {\n      view: this,\n      graphData,\n      node,\n      iframeClasses: this._iframeClasses,\n    };\n\n    for (const behavior of this._nodeBehaviorsByMethod[\n      ENodeBehaveMethod.getNodeThreeObject\n    ]) {\n      let method = behavior.getNodeThreeObject;\n      value = method.call(behavior, options);\n      if (value != null) {\n        return value;\n      }\n    }\n  };\n\n  protected getLinkThreeObject = (link: LinkObject): THREE.Object3D | null => {\n    let value: THREE.Object3D | null;\n    const graphData = (this.graph as ForceGraph3DInstance).graphData();\n    const options: ILinkThreeBehaveOptions = {\n      view: this,\n      graphData,\n      link,\n      index: graphData.links.indexOf(link),\n      iframeClasses: this._iframeClasses,\n    };\n\n    for (const behavior of this._linkBehaviorsByMethod[\n      ELinkBehaveMethod.getLinkThreeObject\n    ]) {\n      let method = behavior.getLinkThreeObject;\n      value = method.call(behavior, options);\n      if (value != null) {\n        return value;\n      }\n    }\n  };\n\n  protected getLinkPosition = (\n    sprite: THREE.Object3D,\n    position: IThreeLinkPosition,\n    link: LinkObject\n  ): void => {\n    const graphData = (this.graph as ForceGraph3DInstance).graphData();\n    const options: ILinkThreeBehaveOptions = {\n      view: this,\n      graphData,\n      link,\n      index: graphData.links.indexOf(link),\n      sprite,\n      position,\n      iframeClasses: this._iframeClasses,\n    };\n\n    for (const behavior of this._linkBehaviorsByMethod[\n      ELinkBehaveMethod.getLinkPosition\n    ]) {\n      let method = behavior.getLinkPosition;\n      method.call(behavior, options);\n    }\n  };\n\n  protected updateRenderOptions(options: IRenderOptions): IRenderOptions {\n    delete options.context2d;\n    delete options.globalScale;\n    options.renderer3d = this.threeRenderer;\n    return options;\n  }\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport type { GraphData, LinkObject, NodeObject } from 'force-graph';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { IBackboneModelOptions, WidgetModel } from '@jupyter-widgets/base';\n\nimport {\n  DEFAULT_COLUMNS,\n  EMPTY_GRAPH_DATA,\n  IExtraColumns,\n  IPreservedColumns,\n  WIDGET_DEFAULTS,\n  emptyArray,\n  emptyPreservedColumns,\n} from '../../tokens';\nimport { dataframe_serialization } from '../serializers';\n\nexport class DataFrameSourceModel extends WidgetModel {\n  static model_name = 'DataFrameSourceModel';\n  static serializers = {\n    ...WidgetModel.serializers,\n    nodes: dataframe_serialization,\n    links: dataframe_serialization,\n  };\n\n  protected _dataUpdated: Signal<DataFrameSourceModel, void> = new Signal(this);\n  protected _graphData: GraphData | null = null;\n  protected _graphDataRequested = false;\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      ...WIDGET_DEFAULTS,\n      _model_name: DataFrameSourceModel.model_name,\n      nodes: null,\n      links: null,\n      node_id_column: DEFAULT_COLUMNS.id,\n      link_id_column: DEFAULT_COLUMNS.id,\n      link_source_column: DEFAULT_COLUMNS.source,\n      link_target_column: DEFAULT_COLUMNS.target,\n      node_preserve_columns: [],\n    };\n  }\n\n  initialize(attributes: Backbone.ObjectHash, options: IBackboneModelOptions) {\n    super.initialize(attributes, options);\n    this.on('change:nodes change:links', this.graphUpdate, this);\n  }\n\n  get dataUpdated(): ISignal<DataFrameSourceModel, void> {\n    return this._dataUpdated;\n  }\n\n  get nodeIdColumn() {\n    return this.get('node_id_column') || DEFAULT_COLUMNS.id;\n  }\n\n  get linkIdColumn() {\n    return this.get('link_id_column') || DEFAULT_COLUMNS.id;\n  }\n\n  get linkSourceColumn() {\n    return this.get('link_source_column') || DEFAULT_COLUMNS.source;\n  }\n\n  get linkTargetColumn() {\n    return this.get('link_target_column') || DEFAULT_COLUMNS.target;\n  }\n\n  get preservedColumns(): IPreservedColumns {\n    const nodes = this.get('node_preserve_columns') || emptyArray;\n    const links = this.get('link_preserve_columns') || emptyArray;\n\n    if (!nodes.length && !links.length) {\n      return emptyPreservedColumns;\n    }\n\n    return { nodes, links };\n  }\n\n  get nodes() {\n    return this.get('nodes') || emptyArray;\n  }\n\n  get links() {\n    return this.get('links') || emptyArray;\n  }\n\n  get graphData(): GraphData {\n    if (!this._graphDataRequested) {\n      this.graphUpdate();\n      this._graphDataRequested = true;\n    }\n    return this._graphData || EMPTY_GRAPH_DATA;\n  }\n\n  set graphData(graphData: GraphData) {\n    this._graphData = graphData;\n    this._dataUpdated.emit(void 0);\n  }\n\n  allColumns(obj: NodeObject | LinkObject, extraColumns: string[]) {\n    let allColumns = [...Object.keys(obj)];\n    for (const extraColumn of extraColumns) {\n      if (!allColumns.includes(extraColumn)) {\n        allColumns.push(extraColumn);\n      }\n    }\n    return allColumns;\n  }\n\n  setFromGraphData(graphData: GraphData, extraColumns: IExtraColumns) {\n    const { nodes, links } = graphData;\n\n    let nodeCount = nodes.length;\n    let linkCount = links.length;\n\n    let nodeRecords: Record<string, any[]> = {};\n    let linkRecords: Record<string, any[]> = {};\n\n    let i: number;\n    let colName: string;\n    let col: any[];\n    let value: any;\n\n    const { nodeIdColumn, linkSourceColumn, linkTargetColumn } = this;\n\n    if (nodeCount) {\n      for (colName of this.allColumns(nodes[0], extraColumns.nodes)) {\n        col = nodeRecords[colName] = new Array(nodeCount);\n        i = 0;\n        while (i < nodeCount) {\n          col[i] = nodes[i][colName];\n          i++;\n        }\n      }\n    }\n\n    if (linkCount) {\n      for (colName of this.allColumns(links[0], extraColumns.links)) {\n        col = linkRecords[colName] = new Array(nodeCount);\n        i = 0;\n        while (i < linkCount) {\n          value = links[i][colName];\n\n          switch (colName) {\n            case linkTargetColumn:\n            case linkSourceColumn:\n              value = value[nodeIdColumn];\n              break;\n            default:\n              break;\n          }\n\n          col[i] = value;\n          i++;\n        }\n      }\n    }\n\n    this.set({ nodes: nodeRecords, links: linkRecords });\n  }\n\n  protected graphUpdate() {\n    const graphData: GraphData = { nodes: [], links: [] };\n\n    const { nodes, links, linkIdColumn, nodeIdColumn } = this;\n\n    const nodeColumns = Object.keys(nodes);\n    const linkColumns = Object.keys(links);\n\n    const nodesById: Record<string | number, NodeObject> = {};\n\n    const nodeCount = (nodes[nodeIdColumn] || emptyArray).length;\n    const linkCount = (links[linkIdColumn] || emptyArray).length;\n\n    const hasNodeIdColumn = nodes[nodeIdColumn] != null;\n    const hasLinkIdColumn = nodes[linkIdColumn] != null;\n\n    for (let idx = 0; idx < nodeCount; idx++) {\n      const id = hasNodeIdColumn ? nodes[nodeIdColumn][idx] : idx;\n      const node = { id };\n      nodesById[id] = node;\n      for (const col of nodeColumns) {\n        switch (col) {\n          case nodeIdColumn:\n            continue;\n          default:\n            node[col] = nodes[col][idx];\n            break;\n        }\n      }\n      graphData.nodes.push(node);\n    }\n\n    for (let idx = 0; idx < linkCount; idx++) {\n      const id = hasLinkIdColumn ? links[linkIdColumn][idx] : idx;\n      let link = {\n        id,\n      };\n      for (const col of linkColumns) {\n        switch (col) {\n          case linkIdColumn:\n            continue;\n          default:\n            link[col] = links[col][idx];\n            break;\n        }\n      }\n      graphData.links.push(link as LinkObject);\n    }\n\n    this.graphData = graphData;\n  }\n\n  /** merge the new nodes on top of the old nodes */\n  mergePreserved(\n    newGraphData: GraphData,\n    oldGraphData: GraphData,\n    preservedColumns: IPreservedColumns\n  ): GraphData | null {\n    const { nodeIdColumn, linkIdColumn, mergeOne } = this;\n\n    const oldLinks: Record<string | number, LinkObject> = {};\n    const oldNodes: Record<string | number, NodeObject> = {};\n\n    const nodes: NodeObject[] = [];\n    const links: LinkObject[] = [];\n\n    for (const oldNode of oldGraphData.nodes) {\n      oldNodes[oldNode[nodeIdColumn]] = oldNode;\n    }\n\n    for (const oldLink of oldGraphData.links) {\n      oldLinks[oldLink[linkIdColumn]] = oldLink;\n    }\n\n    for (const newNode of newGraphData.nodes) {\n      mergeOne(newNode, nodes, oldNodes, nodeIdColumn, preservedColumns.nodes);\n    }\n\n    // generate composite links\n    for (const newLink of newGraphData.links) {\n      mergeOne(newLink, links, oldLinks, linkIdColumn, preservedColumns.links);\n    }\n\n    return { nodes, links };\n  }\n\n  /** merge a single new node/link with any preserved columns */\n  mergeOne = <T = NodeObject | LinkObject>(\n    item: T,\n    newItems: T[],\n    oldItems: Record<string, T>,\n    idColumn: string,\n    preservedColumns: string[]\n  ): void => {\n    const compositeItem: T = { ...item };\n    const itemId = compositeItem[idColumn];\n    const oldItem = oldItems[itemId];\n\n    newItems.push(compositeItem);\n\n    if (oldItem == null) {\n      return;\n    }\n\n    for (const column of preservedColumns) {\n      if (oldItem.hasOwnProperty(column)) {\n        compositeItem[column] = oldItem[column];\n      }\n    }\n  };\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { compress, decompress, init } from '@bokuweb/zstd-wasm';\nimport { Buffer } from 'buffer';\n\nimport { IWidgetManager, WidgetModel } from '@jupyter-widgets/base';\n\nimport { DEBUG, EMOJI } from '../../tokens';\n\nexport interface IReceivedSerializedDataFrame {\n  buffer: DataView;\n}\n\nexport interface ISendSerializedDataFrame {\n  buffer: DataView;\n}\n\nexport function jsonToDataFrame(\n  obj: IReceivedSerializedDataFrame | null,\n  manager?: IWidgetManager\n): any {\n  if (!obj.buffer) {\n    return obj;\n  }\n  const compressedData = Buffer.from(obj.buffer.buffer);\n  const data = decompress(compressedData);\n  const jsonString = Buffer.prototype.toString.call(data, 'utf8');\n  const json = JSON.parse(jsonString);\n  return json;\n}\n\nexport function dataFrameToJson(\n  obj: any,\n  widget?: WidgetModel\n): ISendSerializedDataFrame | null {\n  const jsonString = JSON.stringify(obj);\n  const data = Buffer.from(jsonString, 'utf-8');\n  const compressedData = compress(data);\n  return {\n    buffer: compressedData.buffer as any,\n  };\n}\n\nexport const dataframe_serialization = {\n  deserialize: jsonToDataFrame,\n  serialize: dataFrameToJson,\n};\n\nexport async function initializeZstd() {\n  await init();\n  DEBUG && console.warn(`${EMOJI} zstd loaded`);\n}\n","/*\n * Copyright (c) 2023 ipyforcegraph contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { unpack_models } from '@jupyter-widgets/base';\n\nexport const widget_serialization = {\n  deserialize: unpack_models,\n};\n"],"names":["MATH_CONST","E","Math","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2","MATH_UNARY","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","cos","cosh","exp","expm1","floor","fround","log","log10","log1p","log2","sign","sin","sinh","sqrt","tan","tanh","trunc","MATH_BINARY","imul","atan2","MATH_N_ARY","min","max","hypot","Private","async","newTemplate","src","env","nunjucksEnv","TemplateClass","loading","promise","PromiseDelegate","nunjucks","Environment","constName","constValue","Object","entries","addGlobal","fn","name","wrapNAry","performance","now","addFilter","iterable","attr","value","results","item","push","addCustomGlobals","Template","resolve","jsFn","values","rest","Array","isArray","getThemeManager","themeManager","setThemeManager","console","warn","themeChanged","connect","onThemeChanged","_themeVars","getCssVar","varName","window","getComputedStyle","document","body","getPropertyValue","CSS_VAR","RegExp","cssVarReplacer","searchValue","offset","string","groups","replaceCssVars","replaceAll","noop","args","yes","identity","functor","coerceBoolish","toLocaleLowerCase","trim","coerceNumber","Number","coerceArray","new_value","JSON","parse","e","getCoercer","coerce","BehaviorModel","WidgetModel","defaults","super","rank","this","get","initialize","attributes","options","on","onRankChange","_updateRequested","Signal","_graphDataUpdateRequested","_graphCameraUpdateRequested","emit","updateRequested","graphDataUpdateRequested","graphCameraUpdateRequested","FacetedModel","_nodeFacets","JSONExt","_linkFacets","_facetNames","_modelClass","_facetClass","_model_name","model_name","events","facet","facetNames","_onFacetsChanged","call","nodeFacets","linkFacets","facetName","ensureHandlers","nodeHandler","linkHandler","baseKeys","keys","serializers","key","includes","wrapForContext","contextName","contextAllName","context","i","contextAll","rendered","isNaN","err","wrapForNode","handler","wrapForLink","DynamicModel","_nodeHandler","_linkHandler","valueChanged","NunjucksModel","tmpl","coercer","opts","render","ColumnModel","_buildHandlers","node","link","FacetedForceModel","forceFactory","Error","_force","active","force","GraphForcesModel","forces","warmup_ticks","cooldown_ticks","alpha_min","alpha_decay","velocity_decay","onForcesChange","previousForces","disconnect","onForceUpdated","previous","change","facetPromises","ensureFacets","Promise","all","warmupTicks","cooldownTicks","ticks","Infinity","alphaMin","alphaDecay","velocityDecay","checkPositions","graph","nodes","links","graphData","anyNaN","n","x","y","NaN","vx","vy","numDimensions","nDim","round","initialAngleRoll","initialAngleYaw","length","index","fx","fy","fz","z","radius","rollAngle","yawAngle","vz","initializeNodes","forEach","source","widget","CenterForceModel","ClusterForceModel","_clusters","Map","strength","inertia","centerInertia","centers","makeCenters","clusterKey","clusterFunctions","cluster","set","ctx","fixCenter","center","CollisionForceModel","LinkForceModel","distance","ManyBodyForceModel","theta","distance_max","distance_min","distanceMax","distanceMin","RadialForceModel","XForceModel","YForceModel","ZForceModel","DAGBehaviorModel","refreshBehavior","mode","level_distance","node_filter","activeMode","dagMode","dagLevelDistance","nodeFilter","dagNodeFilter","ZoomBase","zoom","lookAt","is3d","hasOwnProperty","GraphCameraModel","visible","capturing","captureVisible","onZoom","k","getVisible3d","getVisible2d","save","THREE","iframeClasses","camera","frustum","Frustum","setFromProjectionMatrix","Matrix4","multiplyMatrices","projectionMatrix","matrixWorldInverse","__threeObj","containsPoint","position","intersectsObject","halfW","width","halfH","height","bx","by","GraphDirectorModel","_resetting","_doneResetting","fit_padding","zoom_first","zoom_duration","pan_duration","fit_duration","onZoomChanged","zoomFirst","zoomDuration","panDuration","fitDuration","fitPadding","wrappedFit","zoomToFit","graph3","Vector3","vLookAt","cameraPosition","centerAt","look_at","setTimeout","GraphDataModel","_sourcesToCapture","source_count","sources","sourceCount","onCapturingChanged","getExtraColumns","behaviors","behavior","extraColumns","onRender","setFromGraphData","view","model","GraphImageModel","_framesToCapture","onBlob","blob","frame","frames","DataView","arrayBuffer","enabled","frame_count","frameCount","context2d","renderer3d","canvas","domElement","toBlob","bind","LinkArrowModel","getLinkDirectionalArrowColor","color","getLinkDirectionalArrowLength","getLinkDirectionalArrowRelPos","relative_position","LinkParticleModel","getLinkDirectionalParticleColor","getLinkDirectionalParticleSpeed","speed","getLinkDirectionalParticles","density","getLinkDirectionalParticleWidth","LinkSelectionModel","onLinkClick","event","selected","columnName","multiple","indexWasSelected","has","ctrlKey","shiftKey","altKey","delete","add","oldIndex","oldLink","clear","selected_color","selected_curvature","selected_line_dash","selected_width","onValueChange","linkCount","Set","save_changes","selectedColor","selectedCurvature","selectedLineDash","selectedWidth","getLinkColor","getLinkCurvature","curvature","parseFloat","getLinkLineDash","line_dash","getLinkWidth","LinkShapeFacetsModel","LinkShapeModel","shapes","onShapesChanged","shape","anyThis","getLinkCanvasObject","_getLinkCanvasObject","getLinkThreeObject","_getLinkThreeObject","getLinkPosition","_getLinkPosition","drawLink2D","obj","drawLink3D","positionLink3D","LinkTooltipModel","getLinkLabel","label","NodeSelectionModel","onNodeClick","oldNode","nodeCount","getNodeColor","NodeShapeFacetsModel","getNodeSize","size","NodeShapeModel","getNodeCanvasObject","_getNodeCanvasObject","getNodeThreeObject","_getNodeThreeObject","drawNode2D","drawNode3D","NodeTooltipModel","getNodeLabel","noopHanlders","ContinuousColorModel","scheme","domain","slice","interpolate","base","v","OrdinalColorModel","range","d3sc","d3s","schemeRange","scale","scaleOrdinal","transparent","FULL_CIRCLE","ELLIPSE_DEFAULTS","freeze","depth","opacity","fill","scale_on_zoom","stroke","stroke_width","offset_x","offset_y","offset_z","RECTANGLE_DEFAULTS","TEXT_DEFAULTS","font","padding","text","ShapeBaseModel","_resolveFacets","markType","draw","facets","GeometryShapeModel","shapeDefaults","globalScale","drawOptions","_drawCanvas","_drawThree","_drawCanvasPath","globalAlpha","fillStyle","strokeStyle","lineWidth","setLineDash","beginPath","_drawThreeGeometry","_THREE","geometry","material","MeshLambertMaterial","Mesh","TextShapeModel","_drawCanvasNode","_drawThreeText","sprite","_positionThreeLink","_drawCanvasLink","start","end","assign","background","_SpriteText","SpriteText","depthWrite","textHeight","fontFace","size_pixels","fontSize","strokeColor","strokeWidth","backgroundColor","bb","measureText","fillRect","_drawCanvasText","target","textAngle","linkWidth","_getTextTransforms","textWidth","_getTruncatedCanvasText","translate","rotate","restore","relLink","extraPad","textAlign","textBaseline","lineJoin","strokeText","fillText","EllipseShapeModel","radiusX","radiusY","ellipse","SphereGeometry","applyMatrix4","makeScale","RectangleShapeModel","finalWidth","finalHeight","rect","BoxGeometry","WrapperModel","wrappedChanged","wrapped","previousWrapped","CaptureAsModel","ReplaceCssVariablesModel","SPACES","rgb","hsl","lab","hcl","cubehelix","OPT_KEYS","ColorizeModel","join","cache","d3c","colorOpts","opt","_colorize","mapped","dColor","space","channel","TintModel","_tint","tint","dc","brighter","darker","formatRgb","ForceGraphModel","DOMWidgetModel","_view_name","ForceGraphView","view_name","background_color","default_link_color","default_link_curvature","default_link_line_dash","default_link_width","default_node_color","default_node_size","onBehaviorsChange","compareRank","behaviorA","behaviorB","parseInt","cid","_behaviorsChanged","_linkBehaviorsByMethod","_nodeBehaviorsByMethod","_graphBehaviorsByMethod","linkMethod","eLinkMethod","methodBehaviors","sort","nodeMethod","eNodeMethod","graphMethod","eGraphMethod","graphBehaviors","forceBehaviors","_forceBehaviors","linkBehaviorsByMethod","nodeBehaviorsByMethod","graphBehaviorsByMethod","preservedColumns","behaviorsChanged","previousBehaviors","defaultNodeColor","defaultNodeSize","defaultLinkColor","defaultLinkCurvature","defaultLinkLineDash","defaultLinkWidth","DOMWidgetView","onFrameLoaded","iframe","currentTarget","contentWindow","initResult","init","_iframeClasses","addEventListener","onWindowResize","_rendered","onGraphInitialized","redraw","_iframe","innerWidth","innerHeight","wrapFunction","postForceUpdate","firstSource","getComposedLinkAttr","castToNumber","indexOf","getComposedNodeAttr","shouldContinue","updateRenderOptions","previousSource","parameters","luminoWidget","addClass","graphJsClass","onSourceChange","postUpdate","disposed","onDisposed","handleMessage","message","action","d3ReheatSimulation","exhaustiveCheck","error","_destructor","removeEventListener","onload","root","el","createElement","iframeSrc","getIframeSource","setAttribute","appendChild","default","extraJsClasses","urls","getJsUrls","scripts","url","graphJsPostInit","pauseAnimation","oldGraphData","needsFullRedraw","mergePreserved","resumeAnimation","dataUpdated","updateGraphData","updateGraphCamera","caller","kind","displayed","ensureAllFacets","ensureBehaviorCache","maybeEvaluate","finalDefaultLinkColor","linkColor","finalDefaulLinkWidth","finalDefaultLinkCurvature","linkCurvature","linkLineDash","linkLabel","linkDirectionalArrowColor","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkDirectionalParticleColor","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticles","finalDefaultNodeColor","nodeColor","nodeVal","nodeLabel","getForceUpdate","getOnRenderPostUpdate","needsPost","simBehavior","d3AlphaDecay","d3AlphaMin","d3VelocityDecay","d3Force","nodeCanvasObject","canvasFn","linkCanvasObject","onRenderFramePost","throttled","zoomData","invoke","onGraphDataUpdateRequested","onGraphCameraUpdateRequested","methodIdx","methodName","defaultValue","ForceGraph3DModel","ForceGraph3DView","onControlsChange","_threeRenderer","renderer","_threeControls","controls","_threeCamera","threeRenderer","threeControls","threeCamera","nodeThreeObject","linkPositionUpdate","linkThreeObject","setAnimationLoop","DataFrameSourceModel","_dataUpdated","_graphData","_graphDataRequested","mergeOne","newItems","oldItems","idColumn","compositeItem","oldItem","column","node_id_column","link_id_column","link_source_column","link_target_column","node_preserve_columns","graphUpdate","nodeIdColumn","linkIdColumn","linkSourceColumn","linkTargetColumn","allColumns","extraColumn","colName","col","nodeRecords","linkRecords","nodeColumns","linkColumns","nodesById","hasNodeIdColumn","hasLinkIdColumn","idx","id","newGraphData","oldLinks","oldNodes","newNode","newLink","dataframe","jsonToDataFrame","manager","buffer","compressedData","Buffer","data","decompress","jsonString","dataFrameToJson","stringify","compress","dataframe_serialization","deserialize","serialize","initializeZstd","widget_serialization","unpack_models"],"sourceRoot":""}